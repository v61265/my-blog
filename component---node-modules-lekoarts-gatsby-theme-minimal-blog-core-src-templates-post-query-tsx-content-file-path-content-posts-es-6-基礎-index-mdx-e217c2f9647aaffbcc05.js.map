{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-es-6-基礎-index-mdx-e217c2f9647aaffbcc05.js","mappings":"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","sources":["webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://v61265-blog/./content/posts/ES6 基礎/index.mdx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    h4: \"h4\",\n    br: \"br\",\n    pre: \"pre\",\n    a: \"a\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"什麼是 ES6\"), \"\\n\", React.createElement(_components.p, null, \"ES6 是指 ECMAScript 第六版，於 2015 年發布，因此又稱 ES2015 。\\n\", React.createElement(_components.code, null, \"ECMAScript\"), \" 是一套程式碼的標準和規範， Javascript 就是依據此實作的，因此可直接使用於 JavaScipt 。\"), \"\\n\", React.createElement(_components.h3, null, \"let & const\"), \"\\n\", React.createElement(_components.p, null, \"定義變數時，除了在前面加 \", React.createElement(_components.code, null, \"var\"), \" 以外，也可以使用 \", React.createElement(_components.code, null, \"let\"), \" 和 \", React.createElement(_components.code, null, \"const\"), \" 。\"), \"\\n\", React.createElement(_components.h4, null, \"差異一：重複宣告\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"const\"), \" 用於宣告 \", React.createElement(_components.code, null, \"常數\"), \" ，因此一旦宣告該常數的內容便無法更動。\", React.createElement(_components.br), \"\\n\", \"相對的， \", React.createElement(_components.code, null, \"let\"), \" 和 \", React.createElement(_components.code, null, \"ver\"), \" 就可以改變。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const PI = 3.14;\\nlet a = 123;\\nPI = 3.1415926; //會出錯\\na = 456; //沒有問題\\n\")), \"\\n\", React.createElement(_components.p, null, \"此處的重複宣告是指不能改變 \", React.createElement(_components.code, null, \"記憶體位置\"), \"，因此上方例子中的數字無法被改變。但若改變物件內容不會影響到記憶體位置，因此沒有問題。\"), \"\\n\", React.createElement(_components.h4, null, \"差異二：作用域\"), \"\\n\", React.createElement(_components.p, null, \"作用域 (scope) 指的是變數的生存範圍。當你輸入 \", React.createElement(_components.code, null, \"console.log(a)\"), \" 時， JavaScript 會往上找是否有宣告過 a ，並回傳該處宣告的值。例如：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function hello() {\\n  var a = 123;\\n  console.log(a); //123\\n}\\n\\nconsole.log(a); //undefined，因為 function 在不同層， a 的作用域無法到此。\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"var\"), \" 的作用域在函數內（若不是在函數內，就是整個文件內），但可能會產生變數範圍太大互相干擾出錯的狀況，例如：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"for (var i = 0; i < 5; i++) {\\n  console.log('*');\\n}\\nconsole.log(i); //5\\n\")), \"\\n\", React.createElement(_components.p, null, \"因此 \", React.createElement(_components.code, null, \"let\"), \" 和 \", React.createElement(_components.code, null, \"const\"), \" 的範圍縮小到一個 block 中（ \", React.createElement(_components.code, null, \"{\"), \" 和 \", React.createElement(_components.code, null, \"}\"), \" 包起來處），可以避免很多問題。\"), \"\\n\", React.createElement(_components.h3, null, \"Template Literals\"), \"\\n\", React.createElement(_components.p, null, \"Template 是樣板的意思。Template Literals 用於字串拼接，不用再只用 \", React.createElement(_components.code, null, \"+\"), \" 和 \", React.createElement(_components.code, null, \",\"), \" ，而是用 \", React.createElement(_components.code, null, \"``\"), \" 框出文字。這種方法可用於多行字串拼接：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"let a = `hi\\nabc\\nwww`;\\n\\nconsole.log(a);\\n//hi\\n//abc\\n//www\\n\")), \"\\n\", React.createElement(_components.p, null, \"也可在其中使用 \", React.createElement(_components.code, null, \"${變數}\"), \" 。例如：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"let name = you;\\nlet hi = 'hi, ${you}';\\n\\nconsole.log(hi); // 'hi, you'\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Destructuring\"), \"\\n\", React.createElement(_components.p, null, \"提取陣列中的值時，最傳統的做法如下：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const arr = [1, 2, 3];\\nlet one = arr[0];\\nlet two = arr[1];\\nlet three = arr[2];\\n\")), \"\\n\", React.createElement(_components.p, null, \"也可以使用 Destructuring 的寫法：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const arr = [1, 2, 3, 4];\\nlet [one, two, three] = arr;\\nconsole.log(two); //2\\n\")), \"\\n\", React.createElement(_components.p, null, \"同樣的也可以用在物件中：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const obj = {\\n  a: 1,\\n  b: 2,\\n  c: 3,\\n};\\n// let {key} = obj ，就是 let obj.key = value\\nlet { a, b, c } = obj;\\nconsole.log(b); //2\\n\")), \"\\n\", React.createElement(_components.p, null, \"知道規則之後，當然可以花式解構物件：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const obj = {\\n  a : {\\n    b : 'c'\\n  }\\n}\\n\\nlet {a{b}} = obj\\nconsole.log(b) //c\\n\")), \"\\n\", React.createElement(_components.p, null, \"當然也可以和函數合併\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function des({ a, b }) {\\n  console.log(a);\\n}\\n\\ndes({ a: 1, b: 2 }); //1\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Spread Operator\"), \"\\n\", React.createElement(_components.p, null, \"展開運算子的寫法是在陣列或物件的名稱前方加上 \", React.createElement(_components.code, null, \"...\"), \" ，以下為基本範例：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"let arr1 = [1, 2, 3]\\nlet arr2 = [4, arr1] // [4, [1, 2, 3]]\\nlet arr3 = [4, ..arr] // [4, 1, 2, 3]\\n\")), \"\\n\", React.createElement(_components.p, null, \"因為展開運算子就是把陣列展開，因此也可以和函式合併使用，例如：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function sum(a, b, c) {\\n  return a + b + c;\\n}\\n\\nlet arr = [1, 2, 3];\\nconsole.log(sum(...arr)); // 6\\n\")), \"\\n\", React.createElement(_components.p, null, \"當然要展開物件也可以：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"let obj1 = { a: 1, b: 2, c: 3 };\\nlet obj2 = { ...obj1, d: 4 };\\n\\nconsole.log(obj2); // {a:1, b:2, c:3, d:4}\\n\")), \"\\n\", React.createElement(_components.p, null, \"展開運算子也可以用於複製陣列和物件，但和直接指定不同，差別如下：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"let arr1 = [1, 2, 3];\\nlet arr2 = arr1; // [1, 2, 3]\\nlet arr3 = [...arr1]; // [1, 2, 3]\\n\\nconsole.log(arr1 === arr2); // true，指向同個記憶體位置\\nconsole.log(arr1 === arr3); // fales ，因為記憶體位置不同\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Rest Parameters\"), \"\\n\", React.createElement(_components.p, null, \"反向展開可以用於解構時，將剩餘的東西放進另一個陣列。例如：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"let arr = [1, 2, 3, 4]\\nlet [first, ...rest] = arr\\nconsole.log(rest) // [2, 3, 4]\\nlet [one, ...test, 4] = arr // 會出現錯誤，因為只能至於最後。\\n\")), \"\\n\", React.createElement(_components.p, null, \"當然也可以和函式合併使用：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function test(...number) {\\n  return number;\\n}\\n\\nconsole.log(test(1, 2, 3)); // [1, 2, 3]\\n\")), \"\\n\", React.createElement(_components.h3, null, \"default Parameters\"), \"\\n\", React.createElement(_components.p, null, \"預設值可於函式或解構中使用，當沒輸入時，則會自動帶入該值。例如：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function test(a = 2, b) {\\n  return [a, b];\\n}\\n\\nconsole.log(test()); // [2, undefined]\\n\\nlet arr = [1, 2, 3];\\nlet [a, b, c, d = 7] = arr;\\nconsole.log(a, b, c, d); // 1 2 3 7\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Arrow Function\"), \"\\n\", React.createElement(_components.p, null, \"箭頭函式簡化程式碼，提高可讀性。例如：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"var sum = function (a, b) {\\n  return a + b;\\n};\\n\\n//改成\\n\\nlet sum = (a, b) => {\\n  return a + b;\\n};\\n\\n//還可以簡化\\n\\nlet sum = (a, b) => {\\n  return a + b;\\n};\\n\\n//把大括號拿掉\\n\\nlet sum = (a, b) => a + b;\\n\\n//只有一個參數時可以不用加括號，但若沒有參數則一定要括號。\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Import & Export\"), \"\\n\", React.createElement(_components.p, null, \"和 require 以及 export 一樣， import 和 export 可以讓我們跨檔案提取函式和變數。但因為功能比較新，需要依靠 babel 。最簡單的寫法如下：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"export function add(a, b) {\\n  return a + b;\\n}\\n\\n//另一個檔案//\\n\\nimport { add } from '文件名稱';\\n\")), \"\\n\", React.createElement(_components.p, null, \"如果想要 import 文件裡所有變數，可直接使用：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"import * as (新名稱) from '文件名稱'\\n//取用時\\n(新名稱).(變數名稱)()\\n\")), \"\\n\", React.createElement(_components.p, null, \"當然也可以用預設值：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"export default function add(a, b) {\\n  return a + b;\\n}\\n\\n//另一個檔案//\\n\\nimport add from \\\"文件名稱\\\";\\n\\n// 其實就是\\n\\nimport { default } from \\\"文件名稱\\\";\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Babel\"), \"\\n\", React.createElement(_components.p, null, \"Babel 是一個 JavaScript 的翻譯器，目的是將比較新的語法轉換為舊的，讓你隨時跟上潮流。\\n首先要安裝 Babel ：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"npm install babel-loader @babel/core @babel/preset-env --save-dev\\n\")), \"\\n\", React.createElement(_components.h3, null, \"更多 ES6 語法\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/DrkSephy/es6-cheatsheet\"\n  }, \"https://github.com/DrkSephy/es6-cheatsheet\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"參考資料：\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://hackmd.io/D86KGcHVSpaRuN0cDesudw\"\n  }, \"JavaScript - ES6 語法、Babel 轉譯器\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/yi-hsuanlee/Documents/pratice/myblog/content/posts/ES6 基礎/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h3","p","code","h4","br","pre","strong","_provideComponents","components","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}