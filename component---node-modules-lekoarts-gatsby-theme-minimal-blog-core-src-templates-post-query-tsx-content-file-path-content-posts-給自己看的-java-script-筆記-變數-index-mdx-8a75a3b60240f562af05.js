"use strict";(self.webpackChunkv61265_blog=self.webpackChunkv61265_blog||[]).push([[98],{1173:function(e,t,n){n.d(t,{p:function(){return i},A:function(){return d}});var l=n(6540),a=n(557),r=n(6835),c=n(3328),m=n(7715),u=n(7169);var o=e=>{let{post:t}=e;return null};const E=["16px","8px","4px"].map((e=>"rgba(0, 0, 0, 0.1) 0px "+e+" "+e+" 0px"));var s=e=>{let{data:{post:t},children:n}=e;return(0,a.Y)(c.A,null,(0,a.Y)(r.DZ,{as:"h1",variant:"styles.h1"},t.title),(0,a.Y)("p",{sx:{color:"secondary",mt:3,a:{color:"secondary"},fontSize:[1,1,2]}},(0,a.Y)("time",null,t.date),t.tags&&(0,a.Y)(l.Fragment,null," — ",(0,a.Y)(m.A,{tags:t.tags})),t.timeToRead&&" — ",t.timeToRead&&(0,a.Y)("span",null,t.timeToRead," min read")),(0,a.Y)("section",{sx:{my:5,".gatsby-resp-image-wrapper":{my:[4,4,5],borderRadius:"4px",boxShadow:E.join(", "),".gatsby-resp-image-image":{borderRadius:"4px"}},variant:"layout.content"}},n),(0,a.Y)(o,{post:t}))};const i=e=>{var t,n,l;let{data:{post:r}}=e;return(0,a.Y)(u.A,{title:r.title,description:r.description?r.description:r.excerpt,image:r.banner?null===(t=r.banner)||void 0===t||null===(n=t.childImageSharp)||void 0===n||null===(l=n.resize)||void 0===l?void 0:l.src:void 0,pathname:r.slug,canonicalUrl:r.canonicalUrl})};function d(e){let{...t}=e;return l.createElement(s,t)}},7715:function(e,t,n){var l=n(557),a=n(6540),r=n(4194),c=n(3601),m=n(2174);t.A=e=>{let{tags:t}=e;const{tagsPath:n,basePath:u}=(0,c.A)();return(0,l.Y)(a.Fragment,null,t.map(((e,t)=>(0,l.Y)(a.Fragment,{key:e.slug},!!t&&", ",(0,l.Y)(r.Link,{sx:e=>{var t;return{...null===(t=e.styles)||void 0===t?void 0:t.a}},to:(0,m.A)("/"+u+"/"+n+"/"+e.slug)},e.name)))))}},7169:function(e,t,n){var l=n(6540),a=n(4194),r=n(7533);t.A=e=>{let{title:t="",description:n="",pathname:c="",image:m="",children:u=null,canonicalUrl:o=""}=e;const E=(0,r.A)(),{siteTitle:s,siteTitleAlt:i,siteUrl:d,siteDescription:p,siteImage:g,author:h,siteLanguage:b}=E,v={title:t?t+" | "+s:i,description:n||p,url:""+d+(c||""),image:""+d+(m||g)};return l.createElement(l.Fragment,null,l.createElement("html",{lang:b}),l.createElement("title",null,v.title),l.createElement("meta",{name:"description",content:v.description}),l.createElement("meta",{name:"image",content:v.image}),l.createElement("meta",{property:"og:title",content:v.title}),l.createElement("meta",{property:"og:url",content:v.url}),l.createElement("meta",{property:"og:description",content:v.description}),l.createElement("meta",{property:"og:image",content:v.image}),l.createElement("meta",{property:"og:type",content:"website"}),l.createElement("meta",{property:"og:image:alt",content:v.description}),l.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),l.createElement("meta",{name:"twitter:title",content:v.title}),l.createElement("meta",{name:"twitter:url",content:v.url}),l.createElement("meta",{name:"twitter:description",content:v.description}),l.createElement("meta",{name:"twitter:image",content:v.image}),l.createElement("meta",{name:"twitter:image:alt",content:v.description}),l.createElement("meta",{name:"twitter:creator",content:h}),l.createElement("meta",{name:"gatsby-theme",content:"@lekoarts/gatsby-theme-minimal-blog"}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"32x32",href:(0,a.withPrefix)("/favicon-32x32.png")}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"16x16",href:(0,a.withPrefix)("/favicon-16x16.png")}),l.createElement("link",{rel:"apple-touch-icon",sizes:"180x180",href:(0,a.withPrefix)("/apple-touch-icon.png")}),o?l.createElement("link",{rel:"canonical",href:o}):null,u)}},3301:function(e,t,n){n.r(t),n.d(t,{Head:function(){return m.p},default:function(){return u}});var l=n(6540),a=n(8453);function r(e){const t=Object.assign({h3:"h3",p:"p",br:"br",strong:"strong",a:"a",h4:"h4",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",pre:"pre",h5:"h5",ul:"ul",li:"li",ol:"ol",blockquote:"blockquote"},(0,a.RP)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.h3,null,"前言"),"\n",l.createElement(t.p,null,"雖然時間已經來到第三週了，不過這篇的內容都是第二週的進度。先求有再求好，因此目標是記錄學習過程中重要概念，以及自己覺得新或之後方便回來的資料。",l.createElement(t.br),"\n",l.createElement(t.strong,null,"更新紀錄："),l.createElement(t.br),"\n","2020/06/30 時間不夠，兩小時寫完筆記挑戰。"),"\n",l.createElement(t.h3,null,"上篇沒提到的運算子"),"\n",l.createElement(t.p,null,"其他運算子可以參考上一篇：",l.createElement(t.a,{href:"./JavaScript-base-cal"},"[Week2] JavaScript 基礎 －運算")),"\n",l.createElement(t.h4,null,"都是'='，有什麼差"),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,null,"符號"),l.createElement(t.th,null,"功能"),l.createElement(t.th,null,"例子"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,null,"="),l.createElement(t.td,null,"賦值"),l.createElement(t.td,null,"var a = 2")),l.createElement(t.tr,null,l.createElement(t.td,null,"=="),l.createElement(t.td,null,"等於"),l.createElement(t.td,null,"2 + 3 == 5 > true")),l.createElement(t.tr,null,l.createElement(t.td,null,"==="),l.createElement(t.td,null,"等於（含型態相等）"),l.createElement(t.td,null,"3 === '3' > false")),l.createElement(t.tr,null,l.createElement(t.td,null,"!=="),l.createElement(t.td,null,"不等於"),l.createElement(t.td,null,"2 * 2 !== 3 > true")))),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"小技巧：")," 為了避免奇怪的 Bug ，判斷等式時盡量使用 ",l.createElement(t.code,null,"==="),"。"),"\n",l.createElement(t.h4,null,"指派運算子"),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,null,"符號"),l.createElement(t.th,null,"例子"),l.createElement(t.th,null,"實際上在做什麼"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,null,"+="),l.createElement(t.td,null,"a += b"),l.createElement(t.td,null,"a = a + b")),l.createElement(t.tr,null,l.createElement(t.td,null,"-="),l.createElement(t.td,null,"a -= b"),l.createElement(t.td,null,"a = a - b")),l.createElement(t.tr,null,l.createElement(t.td,null,"* ="),l.createElement(t.td,null,"a * = b"),l.createElement(t.td,null,"a = a * b")),l.createElement(t.tr,null,l.createElement(t.td,null,"/="),l.createElement(t.td,null,"a /= b"),l.createElement(t.td,null,"a = a / b")),l.createElement(t.tr,null,l.createElement(t.td,null,"%="),l.createElement(t.td,null,"a %= b"),l.createElement(t.td,null,"a = a % b")),l.createElement(t.tr,null,l.createElement(t.td,null,"++"),l.createElement(t.td,null,"a++"),l.createElement(t.td,null,"a = a + 1")),l.createElement(t.tr,null,l.createElement(t.td,null,"--"),l.createElement(t.td,null,"a--"),l.createElement(t.td,null,"a = a - 1")))),"\n",l.createElement(t.p,null,"另外 ",l.createElement(t.code,null,"++a")," 也代表 ",l.createElement(t.code,null,"a += 1")," ， ",l.createElement(t.code,null,"--a")," 也代表 ",l.createElement(t.code,null,"a -= 1")," 。放前後的差別如下："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = 0;\nconsole.log(a++ && 30);\n// false\nconsole.log(a);\n// 1\n")),"\n",l.createElement(t.p,null,"上面例子中， ",l.createElement(t.code,null,"console.log(a++ && 30)")," 可以解讀成 ",l.createElement(t.code,null,"console.log(a && 30)")," 然後再 ",l.createElement(t.code,null,"a+=1"),"。"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = 0;\nconsole.log(++a && 30); //先執行 a+=1 再 console.log(a && 30)\n// true\nconsole.log(a);\n// 1\n")),"\n",l.createElement(t.p,null,"通常一句話中只會有一個 ",l.createElement(t.code,null,"a++")," 或 ",l.createElement(t.code,null,"a--")," ，才不會有判斷先後順序的問題。"),"\n",l.createElement(t.h3,null,"變數"),"\n",l.createElement(t.p,null,"JavaScripts 中，宣告變數的方法如下："),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"var 變數名稱 = 變數內容\n")),"\n",l.createElement(t.p,null,"可以先將變數想像成一個箱子，裝著內容（的記憶體位置）。"),"\n",l.createElement(t.h5,null,"變數命名"),"\n",l.createElement(t.p,null,"記得培養好好命名的習慣，如果每個變數都只叫 a 或 b ，事後回來看會很難辨別，連自己都搞不清楚。"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"變數名稱大小寫有差別"),"\n",l.createElement(t.li,null,"不能用數字開頭，保留字和特殊符號也盡量避免"),"\n",l.createElement(t.li,null,l.createElement(t.code,null,"undefine")," 代表有宣告變數，但沒有內容； ",l.createElement(t.code,null,"not define")," 代表該變數沒有被宣告過。"),"\n",l.createElement(t.li,null,"常見的變數命名方法，用哪種都沒關係，但記得要統一比較好閱讀。","\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"用底線分格，如 ",l.createElement(t.code,null,"this_is_a_box")),"\n",l.createElement(t.li,null,"用大小寫區分，如 ",l.createElement(t.code,null,"thisIsABox")),"\n"),"\n"),"\n"),"\n",l.createElement(t.h4,null,"變數的型態"),"\n",l.createElement(t.p,null,"輸入 ",l.createElement(t.code,null,"type (變數名稱)")," 可以得到變數的型態，型態可以分為以下幾種："),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,null,"型態"),l.createElement(t.th,null,"例子"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,null,"boolean"),l.createElement(t.td,null,"true, false")),l.createElement(t.tr,null,l.createElement(t.td,null,"number"),l.createElement(t.td,null,"1, 2, 999, -3.2")),l.createElement(t.tr,null,l.createElement(t.td,null,"string"),l.createElement(t.td,null,"'字串', '30', 'hello'")),l.createElement(t.tr,null,l.createElement(t.td,null,"object"),l.createElement(t.td,null,l.createElement(t.code,null,"[1, 2, 'a']"),", ",l.createElement(t.code,null,"{a: 1}"),", null")),l.createElement(t.tr,null,l.createElement(t.td,null,"undefine"),l.createElement(t.td,null,"undefine")),l.createElement(t.tr,null,l.createElement(t.td,null,"function"),l.createElement(t.td,null,"所有 function")))),"\n",l.createElement(t.h4,null,"陣列"),"\n",l.createElement(t.p,null,"陣列可適用於重複性高的事務，例如老師希望你輸入全班成績，只用變數的話會變成："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var number1 = 90;\nvar number2 = 33;\nvar number3 = 82;\n")),"\n",l.createElement(t.p,null,"不如包成一個陣列："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var scores = [90, 33, 82, ...]\n")),"\n",l.createElement(t.p,null,"陣列的形式是："),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"陣列名稱 = [ 第 0 個內容, 第 1 個內容, 第 2 個內容, ...]\n")),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"JavaScript 中，所有索引值（位置）都是 0 開始。"),"\n"),"\n",l.createElement(t.p,null,"以下是基礎的陣列用法："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var 陣列名稱 = [ 第 0 個內容, 第 1 個內容, 第 2 個內容, ...]\n陣列名稱[索引值]　= 內容  //增加或改變陣列內容\n陣列名稱.push(內容) //將內容增新到陣列尾端\n陣列名稱.length //得到陣列長度（有幾個元素）\n")),"\n",l.createElement(t.h4,null,"物件"),"\n",l.createElement(t.p,null,"如果只是登記同學成績，陣列好像就夠了。但老師看你好像很熟悉 JaveScript ，進一步拜託你登記每位同學的名字、電話和成績。如果每種類別都用一個陣列好像太冗了，此時就可以使用物件："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var 物件名稱 = {\n  key0 : value0;\n  key1 : value1;\n  ...\n}\n")),"\n",l.createElement(t.p,null,"以上 value 的部分可以放值、字串、陣列、物件或甚至一個函式。當然物件也能和陣列一同使用，例如以下每位學生就是一個物件："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var students = [ peter, mary, ...]\nvar peter = {\n  name: 'Peter'\n  phone: '0922'\n  score: 100\n}\n")),"\n",l.createElement(t.p,null,"叫出 value 的方法有兩種： ",l.createElement(t.code,null,"物件名稱['key']")," 和 ",l.createElement(t.code,null,"物件名稱.key")," 。"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var peter = {\n  name: 'Peter'\n  phone: '0922'\n  score: 100\n}\nconsole.log(peter[name])\n> Peter\n\npeter[score] = 88\nconsole.log(peter)\n// {\n  // name: 'Peter'\n  // phone: '0922'\n  // score: 88\n// }\n")),"\n",l.createElement(t.h4,null,"變數運算"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"字串 + 字串，會將字串拼接起來。例如 ",l.createElement(t.code,null,"'hello' + 'world' > 'helloworld'"),"。"),"\n",l.createElement(t.li,null,"數字 + 字串，會將數字轉成字串接起來。例如 ",l.createElement(t.code,null,"10 + '20' > '1020'"),"。"),"\n",l.createElement(t.li,null,"浮點數誤差。因為 JavaScript 儲存小數時並不精準，可能 0.2 其實是 0.2000000004 ，因此小數相加要用其他方法。例如 ",l.createElement(t.code,null,"0.2 + 0.3 === 0.5 > false")),"\n"),"\n",l.createElement(t.h3,null,"判斷式"),"\n",l.createElement(t.p,null,"判斷式的形式如下："),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"if (條件) {  //如果條件為 true 則執行下方內容\n  執行內容\n} else if(條件) {  //可有可無，也可以有很多個\n  執行內容\n} else {  //上面都不滿足的話就執行下方內容\n  執行內容\n}\n")),"\n",l.createElement(t.p,null,"例如判斷考試成績是否及格："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var score = 79;\nif (score >= 80) {\n  console.log('Great!');\n} else if (score >= 60) {\n  console.log('pass');\n} else {\n  console.log('fail');\n}\n// pass\n")),"\n",l.createElement(t.p,null,"若在條件處運算，則會先完成運算後再依照運算結果回傳真假。"),"\n",l.createElement(t.h4,null,"太多選擇：switch case"),"\n",l.createElement(t.p,null,"如果今天太多條件要判斷，例如要是變數是 ",l.createElement(t.code,null,"1")," ，就回傳 ",l.createElement(t.code,null,"一月")," ； ",l.createElement(t.code,null,"2")," 就是 ",l.createElement(t.code,null,"二月")," ，以此類推。這時要是使用 if 判斷式，就要寫 12 次了？這種情況可以用 switch case 解決："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var month = 6\nswitch(month){\n  case 1:    // case + 條件\n    console.log('一月')\n    break  //如果不加的話滿足 1 就會直接繼續執行下面指令\n  case 2:\n    console.log('二月')\n    break\n  ...\n  default:  //都不符合的話\n    console.log('x')\n}\n// 六月\n")),"\n",l.createElement(t.p,null,"當然這種情況也可以用陣列解決："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var monthToChinese = ['一月', '二月', '三月', ...]\nconsole.log(monthToChinese[month - 1])\n// 因為陣列索引值從 0 開始算，但月份是從 1 開始\n")),"\n",l.createElement(t.h4,null,"更簡潔的寫法：三元運算子"),"\n",l.createElement(t.p,null,"相反的，如果只是要判斷是否，就可以使用 ternary ："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"條件 ? true回傳值 : false回傳值;\n//例子：判斷是否及格\nvar score = 59;\nvar isPass = score >= 60 ? 'pass' : 'fail';\nconsole.log(isPass);\n// fail\n")),"\n",l.createElement(t.h3,null,"兩小時挑戰結果"),"\n",l.createElement(t.h4,null,"失敗？"),"\n",l.createElement(t.p,null,"本來希望能將迴圈、函式、常用內建函式、物件在電腦中的保存方式及其他觀念一起記錄下來，不過第一次寫到這裡時已經兩個小時了。因此明天會開一小時挑戰把剩下概念筆記完。\n很喜歡這種截稿的緊張感，番茄醬工作法屢試不爽（等等）"))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.RP)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)},m=n(1173);function u(e){return l.createElement(m.A,e,l.createElement(c,e))}m.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-給自己看的-java-script-筆記-變數-index-mdx-8a75a3b60240f562af05.js.map