{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-給自己看的-java-script-進階-物件導向-index-mdx-51fa3bf0c7b4f76d60e7.js","mappings":"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","sources":["webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://v61265-blog/./content/posts/給自己看的 JavaScript 進階 - 物件導向/index.mdx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    img: \"img\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"給自己看的 JS 進階：（建議按照順序看）\\n\", React.createElement(_components.a, {\n    href: \"/JavaScript-advanced-variable\"\n  }, \"給自己看的 JS 進階－變數\"), \"\\n\", React.createElement(_components.a, {\n    href: \"/JavaScript-advanced-hoisting\"\n  }, \"給自己看的 JS 進階－Hoisting\"), \"\\n\", React.createElement(_components.a, {\n    href: \"/JavaScript-advanced-closure\"\n  }, \"給自己看的 JS 進階－Closure\"), \"\\n\", React.createElement(_components.a, {\n    href: \"JavaScript-advanced-oop\"\n  }, \"給自己看的 JS 進階－物件導向\")), \"\\n\", React.createElement(_components.h3, null, \"什麼是物件導向\"), \"\\n\", React.createElement(_components.p, null, \"從剛剛的例子開始說吧：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function createWallet(init) {\\n\\tvar money = init\\n\\treturn {\\n\\t\\tadd: function(num) {\\n\\t\\t\\tmoney += num\\n\\t\\t},\\n\\t\\tdeduct: function(num) {\\n\\t\\t\\tmoney -= num\\n\\t\\t}\\n\\t}, getMoney() {\\n\\t\\treturn money\\n\\t}\\n}\\n\\nvar myWallet = createWallet(99)\\nmyWallet.add(1)\\nmyWallet.deduct(10)\\nconsole.log(myWallet.getMoney()) // 90\\n\")), \"\\n\", React.createElement(_components.p, null, \"這個例子中回傳的值是一個物件，其實就算是物件導向。在使用 JS 時，也時常不是直接 call 一個 function ，而是對某個物件做操作，這種做法的好處是方便模組化。\"), \"\\n\", React.createElement(_components.h3, null, \"class\"), \"\\n\", React.createElement(_components.p, null, \"從 ES6 的 \", React.createElement(_components.code, null, \"class\"), \" 開始談起。\"), \"\\n\", React.createElement(_components.p, null, \"首先， class 的名稱一定是大寫開頭，例如：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"class Dog {\\n  sayHello() {\\n    console.log('hello');\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"class 有點像設計圖，當我們實際使用前時，要用 \", React.createElement(_components.code, null, \"new\"), \" 將 class 實體化 (instance)：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"var d = new Dog();\\nd.sayHello(); // hello\\n\")), \"\\n\", React.createElement(_components.p, null, \"另一個概念是 \", React.createElement(_components.code, null, \"this\"), \" ，它會指向呼叫它的東西：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"class Dog {\\n  setName(name) {\\n    this.name = name;\\n  }\\n  getName() {\\n    return this.name;\\n  }\\n}\\n\\nvar d = new Dog();\\nd.setName('jojo');\\nconsole.log(getName()); // jojo\\n\")), \"\\n\", React.createElement(_components.p, null, \"上面範例中 \", React.createElement(_components.code, null, \"d.setName('jojo')\"), \" 中的 \", React.createElement(_components.code, null, \"this\"), \" 因為是由 d 呼喚的，因此 \", React.createElement(_components.code, null, \"this\"), \" 當然就指向變數 d 。\\nclass 中 \", React.createElement(_components.code, null, \"setName(name)\"), \" 這樣的函數被稱為 setter ，讓裡面存取到外面的值；而 \", React.createElement(_components.code, null, \"sayHello()\"), \" 則叫 getter ，是讓外面得到 class 的值。 另外我們也可以直接這樣寫：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"d.name = 'dio';\\nconsole.log(d.name); // dio\\n\")), \"\\n\", React.createElement(_components.p, null, \"但還是建議用 setter 和 getter 。\"), \"\\n\", React.createElement(_components.p, null, \"如果想要用像是函式傳參數的方式設定，可以用 \", React.createElement(_components.code, null, \"建構子 constructor\"), \"：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"class Dog {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n  getName() {\\n    return this.name;\\n  }\\n}\\n\\nvar d = new Dog('jojo'); // 字串 'jojo' 被傳入 constructor() 中\\nconsole.log(getName()); // jojo\\n\\nvar d = new Dog('dio');\\nconsole.log(getName()); // dio\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"ES5 的 class\")), \"\\n\", React.createElement(_components.p, null, \"在 ES5 中沒有 class ，因此要這樣寫：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function Dog(name) {\\n\\tvar myName = name\\n\\treturn {\\n\\t\\tgetName: function() {\\n\\t\\t\\treturn myName\\n\\t\\t},\\n\\t\\tsayHello: funcrion() {\\n\\t\\t\\tconsole.log(myName)\\n\\t\\t}\\n\\t}\\n}\\n\\nvar d = Dog('jojo')\\nd.sayHello // jojo\\n\\nvar b = Dog('dio')\\nd.sayHello // dio\\n\")), \"\\n\", React.createElement(_components.p, null, \"不過因為每次都是呼叫一個新的物件，會出現這種狀況：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"console.log(b.sayHello === d.sayHello); // false\\n\")), \"\\n\", React.createElement(_components.p, null, \"不過兩個是同個 function ，所以共用同個 function 比較省記憶體吧？\"), \"\\n\", React.createElement(_components.p, null, \"因此在 ES5 中，可以將 function 當作 constructor 用：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function Dog(name) {\\n  this.name = name;\\n}\\n\\nvar d = new Dog('abc');\\nconsole.log(d); // Dog { name: 'abc' }\\n\")), \"\\n\", React.createElement(_components.p, null, \"自動變成物件了！\\n不過這樣要怎麼知道是 constructor 還是平常的 function？只有加 \", React.createElement(_components.code, null, \"new\"), \" 才會被認定是 constructor ，如果沒加就是 function 。\"), \"\\n\", React.createElement(_components.p, null, \"設定屬性的問題搞定了，但要怎麼設定輸出名字和其他操作ㄋ？這時候可以把東西掛在 \", React.createElement(_components.code, null, \".prototype\"), \" 上：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"Dog.prototype.sayHello = function () {\\n  console.log(this.name);\\n};\\n\\nvar d = new Dog('jojo');\\nd.sayHello; // jojo\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Prototype\"), \"\\n\", React.createElement(_components.p, null, \"JavaScript 中，每個變數都有個隱藏屬性 \", React.createElement(_components.code, null, \"__proto__\"), \" ，暗示如果在 \", React.createElement(_components.code, null, \"d\"), \" 上面找不到 \", React.createElement(_components.code, null, \"sayHello\"), \" 的屬性：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function Dog(name) {\\n  this.name = name;\\n}\\n\\nDog.prototype.sayHello = function () {\\n  console.log(this.name);\\n};\\n\\nvar d = new Dog('jojo');\\nd.sayHello; // jojo\\n\\nconsole.log(d.__proto__);\\n// Dog { sayHello: [Function (anonymous)] }\\n// 其實就是 Dog.prototype\\n\")), \"\\n\", React.createElement(_components.p, null, \"當我們呼叫 \", React.createElement(_components.code, null, \"d.sayHello\"), \" 時，我們其實是做了：\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"d\"), \" 本身是否有 \", React.createElement(_components.code, null, \"sayHello\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"d.__proto__\"), \" 是否有 \", React.createElement(_components.code, null, \"sayHello\"), \" ，也就是 \", React.createElement(_components.code, null, \"Dog.prototype\")), \"\\n\", React.createElement(_components.li, null, \"沒有的話就找 \", React.createElement(_components.code, null, \"d.__proto__.__proto__\"), \" ，也就是 \", React.createElement(_components.code, null, \"Object.prototype\")), \"\\n\", React.createElement(_components.li, null, \"如果還是沒有就找 \", React.createElement(_components.code, null, \"d.__proto__.__proto__.__proto__\"), \" ，沒有的話會回傳 null。\"), \"\\n\", React.createElement(_components.li, null, \"null 代表找到頂了，沒有的話就會拋出錯誤。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"以上都是只要有就會回傳值，沒有的話才往下進行，這個步驟被稱為原型練（Prototype Chain）。\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://4.bp.blogspot.com/-fatzOLLqlGM/V2dXLiCs5RI/AAAAAAAAmwE/PLkLHJTmOkIiIz0ftJVdsdWmVhzJqgt8wCLcB/s640/1.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"https://i.ibb.co/WVymhkR/prototype.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"我們來看一下：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"console.log(d.__proto__);\\n// Dog.prototype\\n// 結果：Dog { sayHello: [Function (anonymous)] }\\nconsole.log(d.__proto__.__proto__);\\n// Dog.prototype.__proto__\\n// Object.prototype\\n// 結果：{}\\nconsole.log(d.__proto__.__proto__.__proto__);\\n// null\\n\")), \"\\n\", React.createElement(_components.p, null, \"他們之間的關係如下：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"d.__proto__ = Dog.prototype;\\nd.__proto__.__proto__ = Object.prototype;\\nDog.prototype.__proto__ = Object.prototype;\\n\")), \"\\n\", React.createElement(_components.p, null, \"因此我們也可以設定 Object 的 prototype ，這樣就會在第三個步驟呼叫到結果：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"Object.prototype.sayHello = function () {\\n  console.log('object', this.name);\\n};\\n\\nvar d = new Dog('jojo');\\nd.sayHello; // object jojo\\n\")), \"\\n\", React.createElement(_components.p, null, \"如果同時設定 Object 和 Dog 的 prototype ，則會因為原型鍊會先選到 Dog 的：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"Dog.prototype.sayHello = function () {\\n  console.log(this.name);\\n};\\n\\nObject.prototype.sayHello = function () {\\n  console.log('object', this.name);\\n};\\n\\nvar d = new Dog('jojo');\\nd.sayHello; // jojo\\n\")), \"\\n\", React.createElement(_components.p, null, \"同理，此處的 Object 如果被換成 Function ，第四個步驟就會被換成 Function.prototype 。\"), \"\\n\", React.createElement(_components.h3, null, \"new 到底做了什麼\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"function.call()\"), \" 這個函數可以指定 function 中的 \", React.createElement(_components.code, null, \"this\"), \" 值：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function test() {\\n  console.log(this);\\n}\\n\\ntest.call(123); // [Number: 123]\\n\")), \"\\n\", React.createElement(_components.p, null, \"接著來拆解 \", React.createElement(_components.code, null, \"new\"), \" 到底幫我們做了甚麼，因此用另一個 function 來模擬：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function newDog(name) {\\n  // 模擬 new 做了一些事情\\n}\\n\\n// 最後目標\\nvar a = newDog('jojo');\\na.sayHello(); // 印出 jojo\\n\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"建立一個 object，並將值傳入\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function newDog(name) {\\n  var obj = {};\\n  Dog.call(obj, name); // 第一個是 this ，後面依序是傳入值\\n  console.log(obj);\\n}\\n\\nvar a = newDog('jojo'); //{ name: 'jojo' }\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"設定 prototype 連結\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function newDog(name) {\\n  var obj = {};\\n  Dog.call(obj, name); // 第一個是 this ，後面依序是傳入值\\n  obj.__proto__ = Dog.prototype;\\n}\\n\\nvar a = newDog('jojo');\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"回傳 object\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function newDog(name) {\\n  var obj = {};\\n  Dog.call(obj, name); // 第一個是 this ，後面依序是傳入值\\n  obj.__proto__ = Dog.prototype;\\n  return obj;\\n}\\n\\nvar a = newDog('jojo');\\na.sayHello(); // 印出 jojo\\n\")), \"\\n\", React.createElement(_components.p, null, \"就完成ㄌ！\"), \"\\n\", React.createElement(_components.h3, null, \"Inheritance\"), \"\\n\", React.createElement(_components.p, null, \"設想有一個狗的 class ，今天我需要設定黑狗和白狗，這時有名字、會叫、丟飛盤會去接回來之類的和狗有關的屬性就不用再設定一次了。要是有人問你「黑狗有幾個眼睛」時，只要回頭查看「狗」的條目就可以了。這就是 \", React.createElement(_components.code, null, \"Inheritance\"), \" 繼承的概念。\"), \"\\n\", React.createElement(_components.p, null, \"ES6 中的繼承可以這樣寫：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"class BlackDog extands Dog{\\n\\t// 其他黑狗的屬性\\n}\\n\\nconst d = BlackDog('jojo')\\nd.sayHello()\\n\")), \"\\n\", React.createElement(_components.p, null, \"上面的例子中 \", React.createElement(_components.code, null, \"d.sayHello()\"), \" 實際上是往上找到 Dog 的屬性。\"), \"\\n\", React.createElement(_components.p, null, \"此時若我們想讓黑狗被建立的時候就呼叫 \", React.createElement(_components.code, null, \"sayHello()\"), \"：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"class BlackDog extands Dog{\\n\\tconstructure() {\\n\\t\\tthis.sayHello()\\n\\t}\\n}\\n\\nconst d = BlackDog('jojo')\\n\")), \"\\n\", React.createElement(_components.p, null, \"這樣會噴錯，因為在 \", React.createElement(_components.code, null, \"constructor\"), \" 中呼叫 \", React.createElement(_components.code, null, \"this\"), \" 前要用 \", React.createElement(_components.code, null, \"super()\"), \" 另外引入上一層的\", React.createElement(_components.code, null, \"constructor\"), \" ，如下：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"class BlackDog extands Dog{\\n\\tconstructure(name) {\\n\\t\\tsuper(name)\\n\\t\\tthis.sayHello()\\n\\t}\\n}\\n\\nconst d = BlackDog('jojo') // jojo\\n\")), \"\\n\", React.createElement(_components.h3, null, \"this\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"this\"), \" 在物件導向中被使用，可以用代表其所對應到的 instance 。\"), \"\\n\", React.createElement(_components.p, null, \"如果直接呼叫 \", React.createElement(_components.code, null, \"this\"), \" 例如：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function test() {\\n  console.log(this);\\n}\\n\\ntest();\\n\")), \"\\n\", React.createElement(_components.p, null, \"會出現一長串的東西。\"), \"\\n\", React.createElement(_components.p, null, \"若不是物件導向的環境下，預設值為 Global ，node.js 跑是 \", React.createElement(_components.code, null, \"global\"), \" 的變數，瀏覽器則是 \", React.createElement(_components.code, null, \"window\"), \" 。也可以在檔案最上方輸入 \", React.createElement(_components.code, null, \"'use strict';\"), \" 進入嚴格模式，此時的預設值就會是 \", React.createElement(_components.code, null, \"undefined\"), \" 。\"), \"\\n\", React.createElement(_components.p, null, \"另一個例外是使用 DOM 的時候：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"document.querySelector('.dom').addEventListener('click', function () {\\n  console.log(this); // 點擊到的東西\\n});\\n\")), \"\\n\", React.createElement(_components.h3, null, \"call 和 apply\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \".call()\"), \" 的第一個值被預設為 this 的值：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function test() {\\n  console.log(this);\\n}\\n\\ntest.call(123); // [Number: 123]\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"apply\"), \" 也是：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function test() {\\n  console.log(this);\\n}\\n\\ntest.apply(123); // [Number: 123]\\n\")), \"\\n\", React.createElement(_components.p, null, \"兩個的差別是後面的參數引入的方法， call 就是用逗號連接，但 apply 只有兩個參數，第二個參數則是將要傳入的參數們用陣列包起來。\"), \"\\n\", React.createElement(_components.h4, null, \"怎麼看 this\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const obj = {\\n  a: 123,\\n  test: function () {\\n    console.log(this);\\n  },\\n};\\n\\nobj.test(); // this 對應到 obj 本身\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"this\"), \" 和放在哪裡無關，而是看呼叫的方法。例如以下寫法雖然一樣，結果卻不同：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const obj = {\\n  a: 123,\\n  test: function () {\\n    console.log(this);\\n  },\\n};\\n\\nconst func = obj.test;\\nfunc(); // undefined\\n\")), \"\\n\", React.createElement(_components.p, null, \"因為第一個寫法 \", React.createElement(_components.code, null, \"obj.test()\"), \" 可被視為 \", React.createElement(_components.code, null, \"obj.test.call(obj)\"), \" ，因此會呼叫到 obj 。\"), \"\\n\", React.createElement(_components.h4, null, \"bind\"), \"\\n\", React.createElement(_components.p, null, \"小小練習，自己先猜猜看答案：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function log() {\\n  console.log(this);\\n}\\n\\nvar a = { a: 1, log: log };\\nvar b = { a: 2, log: log };\\n\\nlog(); // global\\na.log(); // a\\n\\nb.log.apply(a); // a，因為 call 的值優先\\n\")), \"\\n\", React.createElement(_components.p, null, \"如果希望不管怎麼呼叫， this 的值都不會變，可以是用 \", React.createElement(_components.code, null, \".bind()\"), \" ：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const bindTest = obj.test.bind(obj);\\n\")), \"\\n\", React.createElement(_components.p, null, \"之後不管從哪裡呼叫 \", React.createElement(_components.code, null, \"bindTest()\"), \" ， this 的結果都是 obj 。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"bind\"), \" 和 \", React.createElement(_components.code, null, \"call\"), \" / \", React.createElement(_components.code, null, \"apply\"), \" 的差別在於，前者會回傳一個新的 function ，後者則是直接呼叫。\"), \"\\n\", React.createElement(_components.h4, null, \"碰到箭頭函式，一切都不一樣ㄌ\"), \"\\n\", React.createElement(_components.p, null, \"使用到箭頭函式時， this 的值和如何呼叫沒有關係，此時的規則和 scope 比較像，也就是和定義在哪裡有關係。\"), \"\\n\", React.createElement(_components.p, null, \"可以看這個例子：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"class Test {\\n  run() {\\n    consoel.log(this); // Test\\n    setTimeOut(function () {\\n      console.log(this); // unefined\\n    }, 1000);\\n  }\\n}\\n\\nconst t = newTest();\\nt.run();\\n\")), \"\\n\", React.createElement(_components.p, null, \"但如果用箭頭函式：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"class Test {\\n  run() {\\n    consoel.log(this); // Test\\n    setTimeOut(() => {\\n      console.log(this); // Test\\n    }, 1000);\\n  }\\n}\\n\\nconst t = newTest();\\nt.run();\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/yi-hsuanlee/Documents/pratice/myblog/content/posts/給自己看的 JavaScript 進階 - 物件導向/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","p","h3","pre","code","strong","ol","li","img","h4","_provideComponents","components","className","alt","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}