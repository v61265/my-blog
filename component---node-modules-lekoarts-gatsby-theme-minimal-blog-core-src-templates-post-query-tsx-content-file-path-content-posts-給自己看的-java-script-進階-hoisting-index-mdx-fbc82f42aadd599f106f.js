"use strict";(self.webpackChunkv61265_blog=self.webpackChunkv61265_blog||[]).push([[113],{1173:function(e,n,t){t.d(n,{p:function(){return E},A:function(){return g}});var l=t(6540),a=t(557),c=t(6835),r=t(3328),o=t(7715),m=t(7169);var i=e=>{let{post:n}=e;return null};const s=["16px","8px","4px"].map((e=>"rgba(0, 0, 0, 0.1) 0px "+e+" "+e+" 0px"));var u=e=>{let{data:{post:n},children:t}=e;return(0,a.Y)(r.A,null,(0,a.Y)(c.DZ,{as:"h1",variant:"styles.h1"},n.title),(0,a.Y)("p",{sx:{color:"secondary",mt:3,a:{color:"secondary"},fontSize:[1,1,2]}},(0,a.Y)("time",null,n.date),n.tags&&(0,a.Y)(l.Fragment,null," — ",(0,a.Y)(o.A,{tags:n.tags})),n.timeToRead&&" — ",n.timeToRead&&(0,a.Y)("span",null,n.timeToRead," min read")),(0,a.Y)("section",{sx:{my:5,".gatsby-resp-image-wrapper":{my:[4,4,5],borderRadius:"4px",boxShadow:s.join(", "),".gatsby-resp-image-image":{borderRadius:"4px"}},variant:"layout.content"}},t),(0,a.Y)(i,{post:n}))};const E=e=>{var n,t,l;let{data:{post:c}}=e;return(0,a.Y)(m.A,{title:c.title,description:c.description?c.description:c.excerpt,image:c.banner?null===(n=c.banner)||void 0===n||null===(t=n.childImageSharp)||void 0===t||null===(l=t.resize)||void 0===l?void 0:l.src:void 0,pathname:c.slug,canonicalUrl:c.canonicalUrl})};function g(e){let{...n}=e;return l.createElement(u,n)}},7715:function(e,n,t){var l=t(557),a=t(6540),c=t(4194),r=t(3601),o=t(2174);n.A=e=>{let{tags:n}=e;const{tagsPath:t,basePath:m}=(0,r.A)();return(0,l.Y)(a.Fragment,null,n.map(((e,n)=>(0,l.Y)(a.Fragment,{key:e.slug},!!n&&", ",(0,l.Y)(c.Link,{sx:e=>{var n;return{...null===(n=e.styles)||void 0===n?void 0:n.a}},to:(0,o.A)("/"+m+"/"+t+"/"+e.slug)},e.name)))))}},7169:function(e,n,t){var l=t(6540),a=t(4194),c=t(7533);n.A=e=>{let{title:n="",description:t="",pathname:r="",image:o="",children:m=null,canonicalUrl:i=""}=e;const s=(0,c.A)(),{siteTitle:u,siteTitleAlt:E,siteUrl:g,siteDescription:p,siteImage:d,author:f,siteLanguage:v}=s,b={title:n?n+" | "+u:E,description:t||p,url:""+g+(r||""),image:""+g+(o||d)};return l.createElement(l.Fragment,null,l.createElement("html",{lang:v}),l.createElement("title",null,b.title),l.createElement("meta",{name:"description",content:b.description}),l.createElement("meta",{name:"image",content:b.image}),l.createElement("meta",{property:"og:title",content:b.title}),l.createElement("meta",{property:"og:url",content:b.url}),l.createElement("meta",{property:"og:description",content:b.description}),l.createElement("meta",{property:"og:image",content:b.image}),l.createElement("meta",{property:"og:type",content:"website"}),l.createElement("meta",{property:"og:image:alt",content:b.description}),l.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),l.createElement("meta",{name:"twitter:title",content:b.title}),l.createElement("meta",{name:"twitter:url",content:b.url}),l.createElement("meta",{name:"twitter:description",content:b.description}),l.createElement("meta",{name:"twitter:image",content:b.image}),l.createElement("meta",{name:"twitter:image:alt",content:b.description}),l.createElement("meta",{name:"twitter:creator",content:f}),l.createElement("meta",{name:"gatsby-theme",content:"@lekoarts/gatsby-theme-minimal-blog"}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"32x32",href:(0,a.withPrefix)("/favicon-32x32.png")}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"16x16",href:(0,a.withPrefix)("/favicon-16x16.png")}),l.createElement("link",{rel:"apple-touch-icon",sizes:"180x180",href:(0,a.withPrefix)("/apple-touch-icon.png")}),i?l.createElement("link",{rel:"canonical",href:i}):null,m)}},6910:function(e,n,t){t.r(n),t.d(n,{Head:function(){return o.p},default:function(){return m}});var l=t(6540),a=t(8453);function c(e){const n=Object.assign({p:"p",a:"a",code:"code",pre:"pre",h3:"h3",h4:"h4",ol:"ol",li:"li",strong:"strong",img:"img"},(0,a.RP)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.p,null,"給自己看的 JS 進階：（建議按照順序看）\n",l.createElement(n.a,{href:"/JavaScript-advanced-variable"},"給自己看的 JS 進階－變數"),"\n",l.createElement(n.a,{href:"/JavaScript-advanced-hoisting"},"給自己看的 JS 進階－Hoisting"),"\n",l.createElement(n.a,{href:"/JavaScript-advanced-closure"},"給自己看的 JS 進階－Closure"),"\n",l.createElement(n.a,{href:"JavaScript-advanced-oop"},"給自己看的 JS 進階－物件導向")),"\n",l.createElement(n.p,null,"如果只輸入 ",l.createElement(n.code,null,"console.log(b)")," 會因為 b 沒有被宣告過而噴錯，但如果這樣寫："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"console.log(b);\nvar b = 20;\n")),"\n",l.createElement(n.p,null,"第一行會顯示 ",l.createElement(n.code,null,"indefined")," 的結果，是因為對 JavaScript 來說，其實是："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var b;\nconsole.log(b);\nb = 20;\n")),"\n",l.createElement(n.p,null,"這個現象叫做 ",l.createElement(n.code,null,"hoistion")," 提升，在 JS 中，只有宣告 ",l.createElement(n.code,null,"var b")," 會被提升，賦值 ",l.createElement(n.code,null,"b = 20")," 並不會。"),"\n",l.createElement(n.p,null,"function 也會提升："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"test(); // 123\n\nfunction test() {\n  console.log(123);\n}\n")),"\n",l.createElement(n.p,null,"值得注意的是，下列寫法會出錯："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"test(); // test is not a function\n\nvar test = () => {\n  console.log(123);\n};\n")),"\n",l.createElement(n.p,null,"因為對 JS 來說，實際上提升的只有宣告，所以是這樣："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var test;\ntest();\n\ntest = () => {\n  console.log(123);\n};\n")),"\n",l.createElement(n.h3,null,"hoisting 的順序"),"\n",l.createElement(n.p,null,"hoisting 只會發生在自己的 scope 中，例如："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var a = 'global';\nfunction test() {\n  console.log(a);\n  var a = 'local';\n}\n\ntest();\n")),"\n",l.createElement(n.p,null,"會印出 ",l.createElement(n.code,null,"undefined")," ，因為 function 內有個 hoisting，所以實際上是這樣："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var a = 'global';\nfunction test() {\n  var a;\n  console.log(a);\n  a = 'local';\n}\n\ntest();\n")),"\n",l.createElement(n.h4,null,"提升的優先順序"),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,l.createElement(n.code,null,"function")," 的提升會佔有優先權："),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"console.log(a); // [Function a]\nfunction a() {}\nvar a = 'a';\n")),"\n",l.createElement(n.p,null,"可以看成這樣："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"function a() {}\nconsole.log(a); // [Function a]\nvar a = 'a';\n")),"\n",l.createElement(n.ol,{start:"2"},"\n",l.createElement(n.li,null,"後面蓋掉前面的"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"console.log(a); // 2\nvar a = 1;\nvar a = 2;\n")),"\n",l.createElement(n.ol,{start:"3"},"\n",l.createElement(n.li,null,"提升變數不會影響函式輸入的參數"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"function test(a) {\n  console.log(a); // 123\n  var a = 456;\n}\ntest(123);\n")),"\n",l.createElement(n.p,null,"因為上述提升後只是先定義 a 只是「我要宣告變數 a ㄛ～」沒有影響，但賦值會影響："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"function test(a) {\n  var a = undefined;\n  console.log(a); // undefined\n  a = 456;\n}\ntest(123);\n")),"\n",l.createElement(n.ol,{start:"4"},"\n",l.createElement(n.li,null,"提升 function 會被蓋過去"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"function test() {\n  console.log(a); // [Function a]\n  function a() {}\n}\ntest(123);\n")),"\n",l.createElement(n.p,null,"因此可歸納出 hoisting 的優先順序："),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,"function"),"\n",l.createElement(n.li,null,"arguments"),"\n",l.createElement(n.li,null,"var"),"\n"),"\n",l.createElement(n.h4,null,"hoisting 原理"),"\n",l.createElement(n.p,null,"開始之前先試著自己做做看這個題目："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var a = 1;\nfunction test() {\n  console.log('1.', a);\n  var a = 7;\n  console.log('2.', a);\n  a++;\n  var a;\n  inner();\n  console.log('4.', a);\n  function inner() {\n    console.log('3.', a);\n    a = 30;\n    b = 200;\n  }\n}\ntest();\nconsole.log('5.', a);\na = 70;\nconsole.log('6.', a);\nconsole.log('7.', b);\n")),"\n",l.createElement(n.p,null,"我先猜答案是："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"1. 1\n2. 7\n3. 8\n4. 30\n5. 30\n6. 70\n7. b is not defined\n")),"\n",l.createElement(n.p,null,"我們先 hoisting 成 JS 真正跑的順序好了："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var a = 1;\nfunction test() {\n  var a; // hoisting 上來\n  console.log('1.', a); // 找到上一行，undefined\n  a = 7;\n  console.log('2.', a); // 7\n  a++; // 此時 a = 8\n  var a; // 沒有影響，已經有 a 了\n  inner();\n  console.log('4.', a); // 可看下三行已經被改成 30\n  function inner() {\n    console.log('3.', a); // 本身沒有宣告，往上一層找 a = 8\n    a = 30; // 因為沒有用 var 宣告，因此更改到 test() 中的 a\n    b = 200; // 因為沒有用 var 宣告， b 變成全域變數\n  }\n}\ntest();\nconsole.log('5.', a); // 和 test scope 無關了，看全域 a = 1\na = 70;\nconsole.log('6.', a); // 70\nconsole.log('7.', b); // inner 的 b 是全域變數，因此是 200\n")),"\n",l.createElement(n.p,null,"因此答案是："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"1. undefined\n2. 7\n3. 8\n4. 30\n5. 1\n6. 70\n7. 200\n")),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,"接著來看 ECMAScript ES3 的部分")),"\n",l.createElement(n.img,{src:"https://user-images.githubusercontent.com/2755720/49352096-5d706b80-f6f1-11e8-82fe-8fbff9004184.png",alt:""}),"\n",l.createElement(n.p,null,"我們一開始再粉紅色的 ",l.createElement(n.code,null,"Global Execution Context")," ，之後每進入一層函式就堆高一層，結束後就抽掉退出（可以想像玩疊疊樂？或同時看很多本書，最上面的是正在看的，看完就放到一邊），最上面的表示現在所在位置。整個程式結束時會回到最下層。"),"\n",l.createElement(n.p,null,"每個 Execution Context 中都有一個 ",l.createElement(n.code,null,"Variable Object")," (VO) ，可以想像成是一個物件，每個變數和值都會對應到 key 和 value 。例如："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var a = 1;\n\n// 這裡的 VO 可以想成\nVO: {\n  a: 1;\n}\n")),"\n",l.createElement(n.p,null,"當進入新的 Execution Context （例如一個 function ）時， VO 會自動初始化。順序如下："),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,"將參數傳入。"),"\n",l.createElement(n.li,null,"傳入 function，就算已經有值也蓋掉。（可以解釋為何 function 順位最高）"),"\n",l.createElement(n.li,null,"最後是變數宣告，如果有值就忽略（因此順位最低），沒有的話就增加一個先定義為 undefined 。"),"\n"),"\n",l.createElement(n.p,null,"之後才會開始跑裡面的 code 。"),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,"回頭看剛剛那題：")),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var a = 1; //1\nfunction test() {\n  console.log('1.', a); // 3\n  var a = 7; // 4\n  console.log('2.', a); // 5\n  a++; //6\n  var a; // 7\n  inner(); // 8\n  console.log('4.', a); // 12\n  function inner() {\n    console.log('3.', a); // 9\n    a = 30; // 10\n    b = 200; // 11\n  }\n}\ntest(); // 2\nconsole.log('5.', a); // 13\na = 70; // 14\nconsole.log('6.', a); //15\nconsole.log('7.', b); //16\n")),"\n",l.createElement(n.p,null,"一開始進去的時後 ",l.createElement(n.code,null,"global VO")," 開始初始化："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"global VO: {\n\ttest: function,\n\ta: undefined\n}\n")),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,l.createElement(n.code,null,"global VO")," 的 a 變成 1"),"\n",l.createElement(n.li,null,"進入 test() ，新的 ",l.createElement(n.code,null,"test VO")," 初始化："),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"test VO: {\n\tinner: function,\n\ta: undefined\n}\n")),"\n",l.createElement(n.ol,{start:"3"},"\n",l.createElement(n.li,null,"此時的 ",l.createElement(n.code,null,"test VO")," 中 a 是 undefined ，輸出。"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"test VO")," 的 a 變成 7。"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"test VO")," 的 a 是 7，輸出。"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"test VO")," 的 a 變成 8 。"),"\n",l.createElement(n.li,null,"宣告過了，不用理他。"),"\n",l.createElement(n.li,null,"進入 inner() ，新的 ",l.createElement(n.code,null,"test VO")," 初始化："),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"test VO: {\n\t// 沒有任何參數、變數和函式，因此是空的\n}\n")),"\n",l.createElement(n.ol,{start:"9"},"\n",l.createElement(n.li,null,l.createElement(n.code,null,"inner VO")," 中沒有 a ，往上找到 ",l.createElement(n.code,null,"test VO")," 中的 a 是 8 ，回傳。"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"inner VO")," 中沒有 a ，往上找到 ",l.createElement(n.code,null,"test VO")," 改 a 的值為 30 。"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"inner VO")," 中沒有 b ，往上找 ",l.createElement(n.code,null,"test VO")," ，因此將 b: 200 放在 ",l.createElement(n.code,null,"global VO")," 中（也就是變成全域變數）。inner() 執行結束，抽掉 ",l.createElement(n.code,null,"inner EC")," 。"),"\n",l.createElement(n.li,null,"因為 10 ， ",l.createElement(n.code,null,"test VO")," 中的值為 30 。test() 執行結束，抽掉 ",l.createElement(n.code,null,"test EC")," 。"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"global VO")," 的 a 為 1 （可見第一條），回傳 。"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"global VO")," 的 a 改變成 70 。"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"global VO")," 的 a 為 70，回傳。"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"global VO")," 的 b 為 200（可見 11 條），回傳。"),"\n",l.createElement(n.li,null,"全部執行完，退出 ",l.createElement(n.code,null,"Global EC"),"。"),"\n"),"\n",l.createElement(n.h4,null,"let 和 const 的 hoisting"),"\n",l.createElement(n.p,null,"先看一個情境："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"console.log(a);\nlet a = 20;\n")),"\n",l.createElement(n.p,null,"結果竟然會噴錯！難道 let 和 const 是沒有 hoisting 的嗎？！"),"\n",l.createElement(n.p,null,"其實 let 和 const 是有 hoisting 的，只是有一些奇怪的限制。我們先將 hoisting 後的結果寫下來："),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"let a;\nconsole.log(a);\na = 20;\n")),"\n",l.createElement(n.p,null,"在使用 let 和 const 宣告變數的時候，在變數被賦值之前都不能被使用，因此才會噴錯。在宣告候到賦值前的區塊，有個詞叫 ",l.createElement(n.code,null,"Temporal Dead Zone")," ，在區域中不能取用這個值～"))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.RP)(),e.components);return n?l.createElement(n,e,l.createElement(c,e)):c(e)},o=t(1173);function m(e){return l.createElement(o.A,e,l.createElement(r,e))}o.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-給自己看的-java-script-進階-hoisting-index-mdx-fbc82f42aadd599f106f.js.map