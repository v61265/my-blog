{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-給自己看的-html-超基礎-index-mdx-8083cbd08b60ddad8a81.js","mappings":"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","sources":["webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://v61265-blog/./content/posts/給自己看的 HTML 超基礎/index.mdx","webpack://v61265-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    h1: \"h1\",\n    img: \"img\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"關於這篇文章\"), \"\\n\", React.createElement(_components.p, null, \"雖然目前進度有點落後，不過因為是第一次那麼有系統性的學習 HTML 和 CSS。因此這篇筆記的目的是，讓未來的自己想不起來「咦這個功能叫什麼名字」的時候可以回頭查看。因為目前只看完 \", React.createElement(_components.a, {\n    href: \"https://lidemy.com/courses/enrolled/390445\"\n  }, \"EF101\"), \" ，也當作再複習一次，比較安心。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"更新紀錄：\"), \"\\n2020/08/09 一小時挑戰 => 延續至 08/10\"), \"\\n\", React.createElement(_components.h1, null, \"什麼是 HTML ？\"), \"\\n\", React.createElement(_components.p, null, \"HTML 全名是 Hyper Text Markup Language 超文本標記語言，它並不是一個程式語言。主要用於規劃網頁架構，通過標籤定義網頁的原始內容，例如：這行字是標題，這幾行是一塊，這行字是按鈕。\"), \"\\n\", React.createElement(_components.h2, null, \"基本架構\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"https://www.jungledisk.com/blog/content/images/blog/div-soup-vs-semantic-html.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.code, null, \"<!DOCYTPE HTML>\"), \"：通常會加在檔案最前面，表示我要用最新標準格式，可加可不加。\\n\", React.createElement(_components.code, null, \"<html>\"), \"：將整個網頁包起來。\\n\", React.createElement(_components.code, null, \"<head>\"), \"：放基本資訊。\\n\", React.createElement(_components.code, null, \"<body>\"), \"：網頁主要內容。\\n因此一個基本的 HTML 架構會長這樣：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<html>\\n  <head> </head>\\n  <body></body>\\n</html>\\n\")), \"\\n\", React.createElement(_components.p, null, \"HTML 的標籤都是由一組包起來的，例如 \", React.createElement(_components.code, null, \"<html>\"), \" （開）和 \", React.createElement(_components.code, null, \"</html>\"), \" （合）就是一組，其中就是該標籤作用處。有些標籤也可將開合寫在一起，例如 header 中指定編碼方式的 \", React.createElement(_components.code, null, \"<meta charset=\\\"utf8\\\" />\"), \" 就是一個例子。\\n\", React.createElement(_components.code, null, \"<title>\"), \" 是另一個常見於放在 head 的標籤，可設定該網頁的標題。在瀏覽器看起來就會如下：\\n\", React.createElement(_components.img, {\n    src: \"https://static.coderbridge.com/img/v61265/1e134435755a4220a202c5c48cbfac54.png\",\n    alt: \"\"\n  }), \"\\n另外，若要 \", React.createElement(_components.code, null, \"加註解\"), \" 的話，可用 \", React.createElement(_components.code, null, \"<!--註解註解-->\"), \" ，如此內容便不會顯示於網頁上。\"), \"\\n\", React.createElement(_components.h1, null, \"語意化標籤\"), \"\\n\", React.createElement(_components.p, null, \"語意化標籤的目的是為了讓標籤(Tag)更具意義，以加強文件的結構化，讓搜尋引擎更清楚了解。例如早期分段都只用 \", React.createElement(_components.code, null, \"<div>\"), \" ，現在卻多了 \", React.createElement(_components.code, null, \"<header>\"), \" 、 \", React.createElement(_components.code, null, \"<main>\"), \" 和 \", React.createElement(_components.code, null, \"<footer>\"), \" 之類的，雖然效果顯示上一樣，不過更方便回頭 debug 或溝通。\"), \"\\n\", React.createElement(_components.h1, null, \"文字\"), \"\\n\", React.createElement(_components.p, null, \"HTML 最早就是為了顯示文字，最常見的兩種為：\\n\", React.createElement(_components.code, null, \"<h1>\"), \" ~ \", React.createElement(_components.code, null, \"<h6>\"), \" ： 有點類似 Markdown 中文字前面加上 \", React.createElement(_components.code, null, \"#\"), \" ~ \", React.createElement(_components.code, null, \"######\"), \" ，數字越大字就越大。\\n\", React.createElement(_components.code, null, \"<p>\"), \" ：一個文字段落。\\n\", React.createElement(_components.img, {\n    src: \"https://static.coderbridge.com/img/v61265/6f211f93158b49108e6b87e89a19c35d.png\",\n    alt: \"\"\n  }), \"\\n另外因為內容會忽略前後的空格，因此若要保留完整輸入格式，可用 \", React.createElement(_components.code, null, \"<pre>\"), \" 包起來。另外加入 \", React.createElement(_components.code, null, \"<br/>\"), \" 可強制換行。\"), \"\\n\", React.createElement(_components.h1, null, \"排版\"), \"\\n\", React.createElement(_components.p, null, \"排版的詳細好處會在 CSS 感受到。\\n\", React.createElement(_components.code, null, \"<div>\"), \"：包住一組文字，並且自動換行。\\n\", React.createElement(_components.code, null, \"<span>\"), \"：包住一組文字，但不會自動換行，通常是在段落內的文字。\"), \"\\n\", React.createElement(_components.h1, null, \"圖片\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<img src=\\\"url\\\" />\\n\")), \"\\n\", React.createElement(_components.p, null, \"屬性：\\n\", React.createElement(_components.code, null, \"alt=\\\"替代文字\\\"\"), \" ：當圖片連結失效，原本位置會顯示替代文字。\\n\", React.createElement(_components.code, null, \"title=\\\"文字\\\"\"), \"：滑鼠移上去會顯示的文字。\"), \"\\n\", React.createElement(_components.h1, null, \"清單\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"<li>\"), \"：個別包住清單中的每一條。\\n\", React.createElement(_components.code, null, \"<ul>\"), \"：包住沒有排序的。\\n\", React.createElement(_components.code, null, \"<ol>\"), \"：則是有排序的。\\n例如在 body 輸入：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<ul>\\n  <li>ul是</li>\\n  <li>沒有排序的清單</li>\\n</ul>\\n<ol>\\n  <li>ol包住</li>\\n  <li>有排序的清單</li>\\n</ol>\\n\")), \"\\n\", React.createElement(_components.p, null, \"就會變成這樣：\\n\", React.createElement(_components.img, {\n    src: \"https://static.coderbridge.com/img/v61265/0615987e22974f7e8654da4f7830ac48.png\",\n    alt: \"\"\n  })), \"\\n\", React.createElement(_components.h1, null, \"表格\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"<table>\"), \"：框住整個表格。\\n\", React.createElement(_components.code, null, \"<tr>\"), \"：框出橫的 row 。\\n\", React.createElement(_components.code, null, \"<td>\"), \"：框出直的 colmn 。\\n\", React.createElement(_components.code, null, \"<th>\"), \"：和　\", React.createElement(_components.code, null, \"<td>\"), \" 很像，可用於標題。\\n例如：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<table>\\n  <tr>\\n    <th>編號</th>\\n    <th>姓名</th>\\n    <th>成績</th>\\n  </tr>\\n  <tr>\\n    <td>001</td>\\n    <td>小明</td>\\n    <td>30</td>\\n  </tr>\\n  <tr>\\n    <td>002</td>\\n    <td>小美</td>\\n    <td>92</td>\\n  </tr>\\n</table>\\n\")), \"\\n\", React.createElement(_components.p, null, \"會出現：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<table>\\n  <tr>\\n    <th>編號</th>\\n    <th>姓名</th>\\n    <th>成績</th>\\n  </tr>\\n  <tr>\\n    <td>001</td>\\n    <td>小明</td>\\n    <td>30</td>\\n  </tr>\\n  <tr>\\n    <td>002</td>\\n    <td>小美</td>\\n    <td>92</t>\\n  </tr>\\n</table>\\n\")), \"\\n\", React.createElement(_components.h1, null, \"錨點\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"a\"), \" 是 anchor 的意思，通常搭配 \", React.createElement(_components.code, null, \"href\"), \" (hypertext referance) 指向目的地。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"<!-- 超連結 -->\\n<a href=\\\"https://www.coderbridge.com/@v61265\\\">我的主頁</a>\\n<!-- 像維基百科那樣連到自己頁面的其他地方 -->\\n<a id='123'>目標內容</a>\\n<a href='#123'>連結文字：到目標內容去</a>\\n\")), \"\\n\", React.createElement(_components.p, null, \"會出現：\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"a\", {\n    href: \"https://www.coderbridge.com/@v61265\"\n  }, \"我的主頁\"), \"\\n\", React.createElement(\"a\", {\n    href: \"#123\"\n  }, \"連結文字：到目標內容去\"), \"\\n另外 a 有個屬性 \", React.createElement(_components.code, null, \"target\"), \"：\\n\", React.createElement(_components.code, null, \"target:_self\"), \"：直接連結到網頁，沒設定的話就預設這種。\\n\", React.createElement(_components.code, null, \"target:_blank\"), \"：在新分頁開啟網頁。\"), \"\\n\", React.createElement(_components.h1, null, \"嵌入網頁\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"<iframe src=\\\"url\\\" width=100px height=20% />\\n\")), \"\\n\", React.createElement(_components.h1, null, \"表單\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://www.internetingishard.com/html-and-css/forms/html-form-elements-939709.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<form>\\n  <!--輸入框-->\\n  <input type=\\\"text\\\" /> \\n  <!--送出按鈕-->\\n  <input type=\\\"submit\\\" value=\\\"上面的字\\\" />\\n  <!--密碼框（會自動碼掉輸入）-->\\n  <input type=\\\"password\\\"/>\\n  <!--輸入信箱(自動偵測有沒有@)-->\\n  <input type=\\\"email\\\"/>\\n  <!--輸入日期-->\\n  <input type=\\\"date\\\"/>\\n  <!--單選-->\\n  <input type=\\\"radio\\\" name=\\\"群組名稱\\\" id=\\\"選項名\\\"/><label for=\\\"選項名\\\">選項描述(點這個字也可以選到)</label>\\n  <!--多選-->\\n  <input type=\\\"checkbox\\\"/>\\n</form>\\n\")), \"\\n\", React.createElement(_components.h1, null, \"參考資料\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://hackmd.io/ff_zXfEzRLmMiEiVV5wAEw\"\n  }, \"HTML ＆ SEO\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://medium.com/@angela52799/%E4%BD%95%E8%AC%82-html-8306bb9bda2\"\n  }, \"何謂 HTML？\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://medium.com/@changru.studio/%E5%BF%AB%E9%80%9F%E4%BA%86%E8%A7%A3html%E8%AA%9E%E6%84%8F%E5%8C%96%E6%A8%99%E7%B1%A4-33dd8247d779\"\n  }, \"快速了解 HTML 語意化標籤\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://www.internetingishard.com/html-and-css/forms/\"\n  }, \"html forms\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/yi-hsuanlee/Documents/pratice/myblog/content/posts/給自己看的 HTML 超基礎/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h2","p","strong","h1","img","code","pre","_provideComponents","components","alt","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}