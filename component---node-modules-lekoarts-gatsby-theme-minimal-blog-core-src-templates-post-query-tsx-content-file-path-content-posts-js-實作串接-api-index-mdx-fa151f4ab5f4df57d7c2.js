"use strict";(self.webpackChunkv61265_blog=self.webpackChunkv61265_blog||[]).push([[239],{1173:function(e,n,t){t.d(n,{p:function(){return E},A:function(){return d}});var l=t(6540),r=t(557),a=t(6835),c=t(3328),o=t(7715),m=t(7169);var u=e=>{let{post:n}=e;return null};const s=["16px","8px","4px"].map((e=>"rgba(0, 0, 0, 0.1) 0px "+e+" "+e+" 0px"));var i=e=>{let{data:{post:n},children:t}=e;return(0,r.Y)(c.A,null,(0,r.Y)(a.DZ,{as:"h1",variant:"styles.h1"},n.title),(0,r.Y)("p",{sx:{color:"secondary",mt:3,a:{color:"secondary"},fontSize:[1,1,2]}},(0,r.Y)("time",null,n.date),n.tags&&(0,r.Y)(l.Fragment,null," — ",(0,r.Y)(o.A,{tags:n.tags})),n.timeToRead&&" — ",n.timeToRead&&(0,r.Y)("span",null,n.timeToRead," min read")),(0,r.Y)("section",{sx:{my:5,".gatsby-resp-image-wrapper":{my:[4,4,5],borderRadius:"4px",boxShadow:s.join(", "),".gatsby-resp-image-image":{borderRadius:"4px"}},variant:"layout.content"}},t),(0,r.Y)(u,{post:n}))};const E=e=>{var n,t,l;let{data:{post:a}}=e;return(0,r.Y)(m.A,{title:a.title,description:a.description?a.description:a.excerpt,image:a.banner?null===(n=a.banner)||void 0===n||null===(t=n.childImageSharp)||void 0===t||null===(l=t.resize)||void 0===l?void 0:l.src:void 0,pathname:a.slug,canonicalUrl:a.canonicalUrl})};function d(e){let{...n}=e;return l.createElement(i,n)}},7715:function(e,n,t){var l=t(557),r=t(6540),a=t(4194),c=t(3601),o=t(2174);n.A=e=>{let{tags:n}=e;const{tagsPath:t,basePath:m}=(0,c.A)();return(0,l.Y)(r.Fragment,null,n.map(((e,n)=>(0,l.Y)(r.Fragment,{key:e.slug},!!n&&", ",(0,l.Y)(a.Link,{sx:e=>{var n;return{...null===(n=e.styles)||void 0===n?void 0:n.a}},to:(0,o.A)("/"+m+"/"+t+"/"+e.slug)},e.name)))))}},7169:function(e,n,t){var l=t(6540),r=t(4194),a=t(7533);n.A=e=>{let{title:n="",description:t="",pathname:c="",image:o="",children:m=null,canonicalUrl:u=""}=e;const s=(0,a.A)(),{siteTitle:i,siteTitleAlt:E,siteUrl:d,siteDescription:p,siteImage:h,author:g,siteLanguage:f}=s,b={title:n?n+" | "+i:E,description:t||p,url:""+d+(c||""),image:""+d+(o||h)};return l.createElement(l.Fragment,null,l.createElement("html",{lang:f}),l.createElement("title",null,b.title),l.createElement("meta",{name:"description",content:b.description}),l.createElement("meta",{name:"image",content:b.image}),l.createElement("meta",{property:"og:title",content:b.title}),l.createElement("meta",{property:"og:url",content:b.url}),l.createElement("meta",{property:"og:description",content:b.description}),l.createElement("meta",{property:"og:image",content:b.image}),l.createElement("meta",{property:"og:type",content:"website"}),l.createElement("meta",{property:"og:image:alt",content:b.description}),l.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),l.createElement("meta",{name:"twitter:title",content:b.title}),l.createElement("meta",{name:"twitter:url",content:b.url}),l.createElement("meta",{name:"twitter:description",content:b.description}),l.createElement("meta",{name:"twitter:image",content:b.image}),l.createElement("meta",{name:"twitter:image:alt",content:b.description}),l.createElement("meta",{name:"twitter:creator",content:g}),l.createElement("meta",{name:"gatsby-theme",content:"@lekoarts/gatsby-theme-minimal-blog"}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"32x32",href:(0,r.withPrefix)("/favicon-32x32.png")}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"16x16",href:(0,r.withPrefix)("/favicon-16x16.png")}),l.createElement("link",{rel:"apple-touch-icon",sizes:"180x180",href:(0,r.withPrefix)("/apple-touch-icon.png")}),u?l.createElement("link",{rel:"canonical",href:u}):null,m)}},4599:function(e,n,t){t.r(n),t.d(n,{Head:function(){return o.p},default:function(){return m}});var l=t(6540),r=t(8453);function a(e){const n=Object.assign({h1:"h1",p:"p",a:"a",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h2:"h2",blockquote:"blockquote",h3:"h3",pre:"pre",code:"code",strong:"strong",ol:"ol",li:"li",img:"img",ul:"ul"},(0,r.RP)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.h1,null,"前言"),"\n",l.createElement(n.p,null,"緩慢看完 ",l.createElement(n.a,{href:"https://lidemy.com/courses/enrolled/511271"},"[NET101] 網路基礎概論（搭配 JS 實作練習）")," 後覺得不太扎實，果然一寫到作業就掛掉了。這幾篇會用 ",l.createElement(n.a,{href:"https://github.com/Lidemy/mentor-program-4th/tree/master/homeworks/week4"},"第四週作業")," 來整理 JavaScript 實際串接 API 時會用到的語法和觀念。"),"\n",l.createElement(n.h1,null,"API 是什麼？"),"\n",l.createElement(n.p,null,"API 全名為 Application Programming Interface，中文翻譯為「應用程式介面」。簡單來說就是交換資料的管道。想知道更多可以看 ",l.createElement(n.a,{href:"https://medium.com/@hulitw/ramen-and-api-6238437dc544"},"從拉麵店的販賣機理解什麼是 API")),"\n",l.createElement(n.h1,null,"直接來寫作業ㄅ"),"\n",l.createElement(n.p,null,"API 文件\nBase URL: ",l.createElement(n.a,{href:"https://lidemy-book-store.herokuapp.com"},"https://lidemy-book-store.herokuapp.com")),"\n",l.createElement(n.table,null,l.createElement(n.thead,null,l.createElement(n.tr,null,l.createElement(n.th,null,"說明"),l.createElement(n.th,null,"Method"),l.createElement(n.th,null,"path"),l.createElement(n.th,null,"參數"),l.createElement(n.th,null,"範例"))),l.createElement(n.tbody,null,l.createElement(n.tr,null,l.createElement(n.td,null,"獲取所有書籍"),l.createElement(n.td,null,"GET"),l.createElement(n.td,null,"/books"),l.createElement(n.td,null,"&lt_limit:限制回傳資料數量"),l.createElement(n.td,null,"/books?&lt_limit=5")),l.createElement(n.tr,null,l.createElement(n.td,null,"獲取單一書籍"),l.createElement(n.td,null,"GET"),l.createElement(n.td,null,"/books/:id"),l.createElement(n.td,null,"無"),l.createElement(n.td,null,"/books/10")),l.createElement(n.tr,null,l.createElement(n.td,null,"新增書籍"),l.createElement(n.td,null,"POST"),l.createElement(n.td,null,"/books"),l.createElement(n.td,null,"name:書名"),l.createElement(n.td,null,"無")),l.createElement(n.tr,null,l.createElement(n.td,null,"刪除書籍"),l.createElement(n.td,null,"DELETE"),l.createElement(n.td,null,"/books/:id"),l.createElement(n.td,null,"無"),l.createElement(n.td,null,"無")),l.createElement(n.tr,null,l.createElement(n.td,null,"更改書籍資訊"),l.createElement(n.td,null,"PATCH"),l.createElement(n.td,null,"/books/:id"),l.createElement(n.td,null,"name: 書名"),l.createElement(n.td,null,"無")))),"\n",l.createElement(n.h2,null,"hw1：來自秋秋鞋的任務"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"有一天，住你隔壁的鄰居秋秋鞋跑來按門鈴，說有事想要找你討論，他最近在做一個知識型的 YouTube 頻道，可是快要沒有靈感了。\n這時，他想到一個好主意！他只要能夠看到書店提供的書籍相關資訊，就可以從中汲取靈感，之後就可以發想相關題材，頻道就不會一直不更新了。\n身為秋秋鞋的好朋友，這個重責大任當然就交給你了！\n請閱讀開頭給的 API 文件並串接，用 node.js 寫出一個程式，執行後會在 console 列出前十本書籍的 id 以及書名。\n順帶一提，叫做秋秋鞋是因為他很喜歡秋天。"),"\n"),"\n",l.createElement(n.h3,null,"把東西抓下來：requst"),"\n",l.createElement(n.p,null,"資料來源：\n",l.createElement(n.a,{href:"https://github.com/request/request#super-simple-to-use"},"官網"),"\n",l.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Request"},"MDN")),"\n",l.createElement(n.p,null,"首先，我們要下載 request 的 npm："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"npm install requst --save\n")),"\n",l.createElement(n.p,null,"request 的基本用法為："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"request(input, init)\n")),"\n",l.createElement(n.p,null,"通常 input 為目標網址，例如官網上提供的範本為："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"const request = require('request');\nrequest('http://www.google.com', function (error, response, body) {\n   console.error('error:', error);\n   console.log('statusCode:', response && response.statusCode);\n   console.log('head:', response.headers);\n   console.log('body:', body);\n});\n")),"\n",l.createElement(n.h3,null,"初步整理資料：JSON"),"\n",l.createElement(n.p,null,"剛抓下來的資料會以 JSON 呈現。 JSON 全名 ",l.createElement(n.code,null,"JavaScript Object Notation")," ，和 JS 中物件很像，只是不管是 key 還是 value 都要用雙引號 ",l.createElement(n.code,null,'"')," 框起來，而整體是個字串。\n",l.createElement(n.strong,null,"JSON 轉物件"),"\n參考資料： ",l.createElement(n.a,{href:"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"},"MDN"),"\n",l.createElement(n.code,null,"JSON.parse()")," 可以將 JSON 轉成物件，第一個參數放欲轉換的 JSON ，後面可以指示如何選擇結果。例如"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'const json = {\n  "name" : "jason",\n  "age" : "23",\n  "phone" : "0922"\n}\n\n// 排除 age\nconst obj = JSON.parse(json, (key, value) => {\n  if (key === \'age\') return undefined\n  return value\n})\n\n//{name: "jason", phone: "0922"}\n')),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,"物件轉 JSON"),"\n參考資料： ",l.createElement(n.a,{href:"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"},"MDN"),"\n與此相對的， ",l.createElement(n.code,null,"JSON.stringify()")," 可將物件轉換成 JSON 格式。第一個參數一樣放物件，後面則是結果的轉換標準。"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'const obj = {\n  name: "jason",\n  age: "23",\n  phone: "0922"\n}\n\n// 排除 age\nconst json = JSON.stringify(obj, (key, value) => {\n  if (key === \'age\') return undefined\n  return value\n})\n\n//{"name": "jason", "phone": "0922"} <= 這是字串\n')),"\n",l.createElement(n.h3,null,"try...catch"),"\n",l.createElement(n.p,null,"參考資料： ",l.createElement(n.a,{href:"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Obsolete_Pages/Obsolete_Pages/Obsolete_Pages/%E4%BE%8B%E5%A4%96%E8%99%95%E7%90%86%E8%AA%9E%E6%B3%95/try...catch_%E8%AA%9E%E6%B3%95"},"MDN"),"\n",l.createElement(n.code,null,"try...catch")," 可用於程式中可能出錯處，主動捕捉錯誤，並防止整個程式因錯誤而停擺。用法如下："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"try {\n   // 預期可能會發生錯誤的程式碼\n} catch (e) {\n   // try 區塊有拋出錯誤時，則執行這裡的程式碼\n} finally {\n   // finally 區塊的程式碼一定會在最後被執行\n   // 可以省略 finally 區塊\n}\n")),"\n",l.createElement(n.h3,null,"回頭看第一題"),"\n",l.createElement(n.p,null,"因為實在太菜了，直接看答案怎麼寫好了："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"const request = require('request');\nconst API_ENDPOINT = 'https://lidemy-book-store.herokuapp.com';\n\nrequest(`${API_ENDPOINT}/books?_limit=10`, (err, res, body) => {\n  if (err) {\n    return console.log('抓取失敗', err);\n  }\n  let data\n  try {\n    data = JSON.parse(body);\n  } catch(err) {\n    console.log(err);\n    return\n  }\n  for (let i = 0; i < data.length; i += 1) {\n    console.log(`${data[i].id} ${data[i].name}`);\n  }\n})\n")),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,"筆記：")),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,"目標網址抓出來變成變數，之後要改目標位置就只要改該變數就好。方便。"),"\n",l.createElement(n.li,null,"先查看是否抓取成功 => 轉成物件後再檢查一次 => 依次列出前十個"),"\n"),"\n",l.createElement(n.h2,null,"7/24 實際跑過筆記"),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,"url 後方加上 ",l.createElement(n.code,null,"?")," 可以加參數，如上方 ",l.createElement(n.code,null,"_limit=10")," 就是限制只抓取十筆。但似乎是照 id 抓而非出現順序？"),"\n",l.createElement(n.li,null,"try 的框框中用 const 定義的新變數無法在最後使用，所以外面才會先定義一個 data。"),"\n"),"\n",l.createElement(n.h1,null,"hw2：最後的考驗"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"原本以為上次就已經是最後一次幫忙，沒想到秋秋鞋還是又跑來找你了。他說他想要更多功能，他想把這整個書籍資料庫當作自己的來用，必須能夠顯示前 20 本書的資料、刪除、新增以及修改書本，這樣他就可以管理自己的書籍了。\n（跟 hw1 不同，之前是 10 本，這次要顯示 20 本）\n雖然你很想問他說為什麼不用 Excel 就好，但你問不出口，再加上你最近剛學程式需要練習的機會，於是你就答應了。\n請閱讀開頭給的 API 文件並串接，用 node.js 寫出一個程式並接受參數，輸出相對應的結果，範例如下："),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'node hw2.js list // 印出前二十本書的 id 與書名\nnode hw2.js read 1 // 輸出 id 為 1 的書籍\nnode hw2.js delete 1 // 刪除 id 為 1 的書籍\nnode hw2.js create "I love coding" // 新增一本名為 I love coding 的書\nnode hw2.js update 1 "new name" // 更新 id 為 1 的書名為 new name\n')),"\n",l.createElement(n.h2,null,"process.argv"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"http://nodejs.cn/api/process/process_argv.html"},"參考資料"),"\n使用 ",l.createElement(n.code,null,"process")," 可以取得指令的參數。 ",l.createElement(n.code,null,"process.argv")," 可以得到啟動 Node.js 時 command line 的參數。\n例如若 hw1.js 中有 ",l.createElement(n.code,null,"console.log(process.argv)")," ，再於 command line 輸入 ",l.createElement(n.code,null,"node hw1.js 123")," ，會得到一個陣列，分別指向 node 、 hw1 和 123 。"),"\n",l.createElement(n.h2,null,"開始寫之前，整體架構是"),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,"找到第二三個參數")),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"const request = require('request');\n\nconst apiUrl = 'https://lidemy-book-store.herokuapp.com';\nconst action = process.argv[2]\nconst param = process.argv[3]\n")),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,"用 switch 區分功能")),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"switch (action) {\n  case 'list':\n    listBooks();\n    break;\n  case 'read':\n    readBooks(param);\n    break;\n  case 'delete':\n    deleteBooks(param);\n    break;\n  case 'create':\n    createBooks(param);\n    break;\n  case 'update':\n    updateBooks(param, process.argv[4]);\n    break;\n  default:\n    console.log('Available commands: list, read, delete, create and update');\n}\n")),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,"list 功能"),"\n這個上一題練習過了："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"function listBooks() {\n  request(`${apiUrl}/books?_limit=20`, (err, res, body) => {\n    if (err) return console.log('抓取失敗', err);\n    let data\n    try {\n      data = JSON.parse(body)\n    } catch (e) {\n      return console.log(e);\n    }\n    for (let i = 0; i < data.length; i += 1) {\n      console.log(data[i].id, data[i].name);\n    }\n  });\n}\n")),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,"read 功能"),"\n從上面的函式修改："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"function readBooks(id) {\n  request(`${apiUrl}/books/${id}`, (err, res, body) => {\n    if (err) return console.log('抓取失敗', err);\n    const data = JSON.parse(body);\n    return console.log(data)\n  });\n}\n")),"\n",l.createElement(n.h2,null,"delete, post 和 patch"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://github.com/request/request#convenience-methods"},"參考資料"),"\n",l.createElement(n.code,null,"request.delete()")," 可以刪除資料，例如："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"request.delete(\n  'https://reqres.in/api/users/2',\n  function (error, response, body) {\n    console.log(response.statusCode)\n  });\n")),"\n",l.createElement(n.p,null,"上方因為資料已經被刪掉了，因此會印出 204 。\n這題中，刪除的語法是這樣："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"function deleteBooks(id) {\n  request.delete(`${apiUrl}/books/${id}`, (err) => {\n    if (err) return console.log('刪除失敗');\n    return console.log('刪除成功');\n  });\n}\n")),"\n",l.createElement(n.p,null,"刪除完後， ",l.createElement(n.code,null,"err")," 照理來說會變成 null (false) 。"),"\n",l.createElement(n.p,null,l.createElement(n.code,null,"request.post()")," 可以增加資料，最常見的形式為："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"request.post(\n  {url,\n  form: {key:'value'}\n  },\n  function(err,httpResponse,body){ /* ... */ })\n")),"\n",l.createElement(n.p,null,"這題中，新增的語法如下："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"function createBooks(name) {\n  request.post({url: `${apiUrl}/books`, form: {name,}}, (err) => {\n    if (err) return console.log('新增失敗', err);\n    return console.log('新增成功')\n  });\n}\n")),"\n",l.createElement(n.p,null,l.createElement(n.code,null,"request.patch()")," 則可以修改資料，使用形式為："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"request.patch({\n    url,\n    form: {\n      //欲修改內容\n    },\n  }, function)\n")),"\n",l.createElement(n.p,null,"這題中寫法如下："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"function updateBooks(id, newName) {\n  request.patch({url: `${apiUrl}/books/${id}`, form: {newName}}, (err) => {\n    if (err) return console.log('更新失敗', err);\n    return console.log('更新成功');\n  });\n}\n")),"\n",l.createElement(n.h1,null,"hw3：周遊列國"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"你的好麻吉小立是一個很愛到處旅遊的人，在前一陣子才靠著便宜的 bug 機票以及特價的商務艙玩遍了許多地方。不過小立一直有個困擾，那就是他希望了解更多跟國家有關的知識，因此他來請你幫忙寫一個搜尋國家資訊的小程式。\n這個程式很簡單，只要輸入國家的英文名字，就能夠查詢符合的國家的資訊，會輸出以下幾項："),"\n"),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,"國家名稱"),"\n",l.createElement(n.li,null,"首都"),"\n",l.createElement(n.li,null,"使用的貨幣名稱"),"\n",l.createElement(n.li,null,"電話國碼"),"\n"),"\n",l.createElement(n.h2,null,"偷看答案"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"const request = require('request');\nconst args = process.argv;\nconst API_ENDPOINT = 'https://restcountries.eu/rest/v2';\n\nconst name = args[2];\n\nif (!name) {\n  return console.log('請輸入國家名稱');\n}\n\nrequest(`${API_ENDPOINT}/name/${name}`, (err, res, body) => {\n  if (err) {\n    return console.log('抓取失敗', err);\n  }\n  const data = JSON.parse(body);\n  if (data.status === 404) {\n    return console.log('找不到國家資訊')\n  }\n\n  for (let i = 0; i < data.length; i++) {\n    console.log('============')\n    console.log('國家：' + data[i].name);\n    console.log('首都：' + data[i].capital);\n    console.log('貨幣：' + data[i].currencies[0].code);\n    console.log('國碼：' + data[i].callingCodes[0]);\n  }\n})\n")),"\n",l.createElement(n.h3,null,"分析思路"),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,"如果沒有輸入名稱 ( args[2] 是空的) ，回傳「請輸入國家名稱」。\n（用 return 連後面也不會跑嗎？）"),"\n",l.createElement(n.li,null,"先看 err 是否存在，有的話就回傳「抓取失敗」。"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"data.status")," 可回傳 HTTP 的狀態碼。（因為 API 中有個 key 就叫 status )。"),"\n",l.createElement(n.li,null,"把結果印下來。"),"\n"),"\n",l.createElement(n.h2,null,"出錯ㄌ"),"\n",l.createElement(n.p,null,l.createElement(n.code,null,"const data")," 只會在 request 函式中作用，因此要將最後印下來的作業於其中完成，否則會無法找到 data 。"),"\n",l.createElement(n.h1,null,"hw4：探索新世界"),"\n",l.createElement(n.p,null,"參考資料：\n",l.createElement(n.a,{href:"https://ithelp.ithome.com.tw/articles/10192541"},"【第十五天】突發任務：Twitch API")),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"之前幫秋秋鞋做完那個小程式以後，你會寫程式的消息似乎就傳開了，有一位 Twitch 平台實況主果凍跑來聯繫你，想請你幫忙做個東西。\n事情是這樣的，他原本是 LOL 的玩家，但因為某些原因帳號被 ban 掉了，為了維持實況的熱度，需要去找其他遊戲來玩，可是他又不知道哪些遊戲比較熱門，會有比較多人觀看。\n因此，他寫請你寫一個小程式，能夠去撈取 Twitch 上面受歡迎的遊戲，他就能夠參考這個列表來決定要實況哪個遊戲。\n由於你偶爾也會看他的實況，所以你欣然接受了這個挑戰，準備來串串看真實世界的 API。\n請參考 Twitch API v5 的文件，寫一隻程式去呼叫 Twitch API，並拿到「最受歡迎的遊戲列表（Get Top Games）」，並依序印出目前觀看人數跟遊戲名稱。\n在這個作業中，你必須自己看懂 Twitch API 的文件，知道怎麼去申請一個 Application 拿到 ClientID，並且在 API 文件當中找到對的那一個 API（Get Top Games），而且務必記得要在 request header 中帶上 ClientID 跟另一個參數 Accept，值是：application/vnd.twitchtv.v5+json。\n還有一件事情要提醒大家，Twitch API 有兩個版本，一個是最新版（New Twitch API，代號 Helix），一個是舊版的（Twitch API v5，代號 kraken），我們這次要串接的是舊版的，不要搞錯版本囉。"),"\n"),"\n",l.createElement(n.h2,null,"得到 ClientID"),"\n",l.createElement(n.p,null,"可參考文章：",l.createElement(n.a,{href:"https://ithelp.ithome.com.tw/articles/10192541"},"【第十五天】突發任務：Twitch API")),"\n",l.createElement(n.h2,null,"如何加入 request header"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"request({\n  method: 'GET',\n  url: <url>,\n  headers: {\n    '參數': 值,\n  }\n}, function(error,response,body){\n  // 其他內容\n})\n")),"\n",l.createElement(n.h2,null,"試著得到 body ，及其後"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"request ({\n    method: 'GET',\n    url: apiUrl,\n    headers: {\n        'Client-ID': clientID,\n        'Accept': 'application/vnd.twitchtv.v5+json',\n    }\n}, (err, res, body) => {\n    console.log(body)\n})\n")),"\n",l.createElement(n.p,null,"整理得到的 JSON 後得到：\n",l.createElement(n.img,{src:"https://static.coderbridge.com/img/v61265/7d614e1a5190468d9142a28340a622e0.png",alt:""}),"\n此時要做的事情："),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,"確認沒有 err"),"\n",l.createElement(n.li,null,"依序印出遊戲人次和名稱"),"\n"),"\n",l.createElement(n.h2,null,"for...of"),"\n",l.createElement(n.p,null,"參考資料：",l.createElement(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...of"},"MDN"),"\n",l.createElement(n.code,null,"for...of")," 可將陣列的值依序取出："),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"for (variable of iterable) {\n    //statements\n}\n")),"\n",l.createElement(n.p,null,"結果 ESlint 不建議 ",l.createElement(n.code,null,"for...of")," ，哈哈哈哈哈。\n還是想用可參考： ",l.createElement(n.a,{href:"https://coldfunction.com/p/6p"},"javascript - ESLint 提示“無限制的語法迭代器/生成器需要 regenerator-runtime”")),"\n",l.createElement(n.h2,null,"最終結果"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"const request = require('request');\n\nconst apiUrl = 'https://api.twitch.tv/kraken/games/top';\nconst clientID = 不給你複製我的ID;\n\nrequest({\n  method: 'GET',\n  url: apiUrl,\n  headers: {\n    'Client-ID': clientID,\n    Accept: 'application/vnd.twitchtv.v5+json',\n  },\n}, (err, res, body) => {\n  if (err) return console.log('抓取失敗');\n  const data = JSON.parse(body).top;\n  for (const i of data) {\n    console.log(i.viewers, i.game.name);\n  }\n  return true;\n});\n")),"\n",l.createElement(n.p,null,"沒什麼關聯但記錄一下：",l.createElement(n.a,{href:"https://blog.techbridge.cc/2019/02/01/linux-curl-command-tutorial/"},"curl 的用法")),"\n",l.createElement(n.h1,null,"hw5：簡答題"),"\n",l.createElement(n.p,null,"參考資料：\n",l.createElement(n.a,{href:"https://github.com/Lidemy/mentor-program-4th-zoeaeen13/blob/master/homeworks/week4/hw5.md"},"zoeaeen13 同學的作業"),"\n",l.createElement(n.a,{href:"https://medium.com/codingbar/api-%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E9%BA%BC-%E7%94%A8%E7%99%BD%E8%A9%B1%E6%96%87%E5%B8%B6%E4%BD%A0%E8%AA%8D%E8%AD%98-95f65a9cfc33"},"API 到底是什麼？ 用白話文帶你認識"),"\n",l.createElement(n.a,{href:"https://developer.mozilla.org/zh-TW/docs/Web/HTTP/Status"},"HTTP 狀態碼")),"\n",l.createElement(n.h2,null,"請以自己的話解釋 API 是什麼？"),"\n",l.createElement(n.p,null,"API 全名為 ",l.createElement(n.code,null,"Application Programming Interface"),"，中文翻譯為「應用程式介面」。簡單來說就是交換資料的管道。"),"\n",l.createElement(n.p,null,"舉例來說好了，今天你進到一家拉麵店，要如何和廚房說你要什麼品項？因為你已經來過很多次了，所以走到拉麵販賣機前點餐，而　",l.createElement(n.code,null,"這個販賣機就是 API")," 。你和廚房可以透過販賣機溝通（使用 API），你開店的時候別人也可以從販賣機點餐（提供 API）。"),"\n",l.createElement(n.p,null,"讓我們整理一下："),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"店面 = 網站或 APP"),"\n",l.createElement(n.li,null,"販賣機 = API"),"\n",l.createElement(n.li,null,"你 = 使用者"),"\n",l.createElement(n.li,null,"廚房 = 資料庫"),"\n",l.createElement(n.li,null,"拉麵 = 資料"),"\n"),"\n",l.createElement(n.h2,null,"請找出三個課程沒教的 HTTP status code 並簡單介紹"),"\n",l.createElement(n.p,null,l.createElement(n.code,null,"status code")," 表示一個 HTTP 要求是否已經被完成，代表 API 層的執行狀態。\nstatus code 大約分成幾種："),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"1xx = Informational（資訊）"),"\n",l.createElement(n.li,null,"2xx = Success（成功）"),"\n",l.createElement(n.li,null,"3xx = Redirect（重定向）"),"\n",l.createElement(n.li,null,"4xx = User error（客戶端錯誤）"),"\n",l.createElement(n.li,null,"5xx = Server error（伺服器端錯誤）"),"\n"),"\n",l.createElement(n.p,null,"以下列出課程沒提到的 HTTP status code：\n",l.createElement(n.code,null,"201 Created"),"：請求成功且新的資源成功被創建，通常用於 POST 或一些 PUT 請求後的回應。\n",l.createElement(n.code,null,"400 Bad Request"),"：此回應意味伺服器因為收到無效語法，而無法理解請求。\n",l.createElement(n.code,null,"403 Forbidden"),"：用戶端並無訪問權限，例如未被授權，所以伺服器拒絕給予應有的回應。不同於 401，伺服端知道用戶端的身份。"),"\n",l.createElement(n.h2,null,"假設你現在是個餐廳平台，需要提供 API 給別人串接並提供基本的 CRUD 功能，包括：回傳所有餐廳資料、回傳單一餐廳資料、刪除餐廳、新增餐廳、更改餐廳，你的 API 會長什麼樣子？請提供一份 API 文件。"),"\n",l.createElement(n.p,null,"參考資料：\n",l.createElement(n.a,{href:"https://www.coderbridge.com/@v61265/96aabb89d7f74d968b6d616223c9f97e"},"[Week4] JS 實作串接 API（一）"),"\n",l.createElement(n.a,{href:"https://www.coderbridge.com/@v61265/c25ef83b1cf1425eabff8edbd0aefa00"},"[Week4] JS 實作串接 API（二）")),"\n",l.createElement(n.p,null,"Base URL: ",l.createElement(n.a,{href:"https://v61265.com"},"https://v61265.com")),"\n",l.createElement(n.table,null,l.createElement(n.thead,null,l.createElement(n.tr,null,l.createElement(n.th,null,"說明"),l.createElement(n.th,null,"Method"),l.createElement(n.th,null,"path"),l.createElement(n.th,null,"參數"),l.createElement(n.th,null,"範例"))),l.createElement(n.tbody,null,l.createElement(n.tr,null,l.createElement(n.td,null,"獲取所有餐廳資料"),l.createElement(n.td,null,"GET"),l.createElement(n.td,null,"/restaurants"),l.createElement(n.td,null,"_limit:限制回傳資料數量"),l.createElement(n.td,null,"/restaurants?_limit=5")),l.createElement(n.tr,null,l.createElement(n.td,null,"獲取單一餐廳資料"),l.createElement(n.td,null,"GET"),l.createElement(n.td,null,"/restaurants/:id"),l.createElement(n.td,null,"無"),l.createElement(n.td,null,"/restaurant/10")),l.createElement(n.tr,null,l.createElement(n.td,null,"新增餐廳"),l.createElement(n.td,null,"POST"),l.createElement(n.td,null,"/restaurants"),l.createElement(n.td,null,"name: 店名"),l.createElement(n.td,null,"無")),l.createElement(n.tr,null,l.createElement(n.td,null,"刪除餐廳"),l.createElement(n.td,null,"DELETE"),l.createElement(n.td,null,"/reataurants/:id"),l.createElement(n.td,null,"無"),l.createElement(n.td,null,"無")),l.createElement(n.tr,null,l.createElement(n.td,null,"更改餐廳資訊"),l.createElement(n.td,null,"PATCH"),l.createElement(n.td,null,"/restaurants/:id"),l.createElement(n.td,null,"name: 店名"),l.createElement(n.td,null,"無")))),"\n",l.createElement(n.h2,null,"回傳所有餐廳資料"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"const request = require('request');\n\nrequest('https://v61265.com/reataurants', (err, res, body) => {\n  // 這裡是你要的內容\n});\n")),"\n",l.createElement(n.h2,null,"回傳單一餐廳資料"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"const request = require('request')\n\nrequest(`https://v61265.com/restaurants/${id}`, (err, res, body) => {\n  //這裡是你要的內容\n});\n")),"\n",l.createElement(n.h2,null,"增新餐廳"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"const request = require('request');\n\nrequest.post( {\n  url: 'https://v61265.com/restaurants',\n  form: {\n    name //新餐廳名稱\n  },\n}, (err, res, body) => {\n  //這裡是你想要的內容\n});\n")),"\n",l.createElement(n.h2,null,"刪除餐廳"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"const request = require('request');\n\nrequest.delete(`https://v61265.com/restaurants/${id}`, (err, res, body) => {\n  //這裡可以加其他東西\n});\n")),"\n",l.createElement(n.h2,null,"更改餐廳資訊"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"const request = require('request');\n\nrequest.patch( {\n  url: `https://v61265.com/restaurants/${id}`,\n  form: { name }\n}, (err,res,body) => {\n  //可以加其他東西\n});\n")),"\n",l.createElement(n.p,null,"最後附上有時間可以回頭看的： ",l.createElement(n.a,{href:"https://ithelp.ithome.com.tw/articles/10230804"},"[原來後端要知道] 如何寫 API 文件？ #Apiary #API Blueprint # Markdown")),"\n",l.createElement(n.p,null,"資料來源：\n",l.createElement(n.a,{href:"https://hackmd.io/PhfjuTVzQPaiXYMiJ3F4qQ"},"API 基礎"),"\n",l.createElement(n.a,{href:"https://medium.com/@miahsuwork/%E7%AC%AC%E5%85%AD%E9%80%B1-api-%E5%9F%BA%E7%A4%8E-json-restful-curl-%E6%8C%87%E4%BB%A4-28670813764e"},"[第六週] API 基礎-\n實際串接 API、資料格式: JSON、API Method 風格: RESTful")))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.RP)(),e.components);return n?l.createElement(n,e,l.createElement(a,e)):a(e)},o=t(1173);function m(e){return l.createElement(o.A,e,l.createElement(c,e))}o.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-js-實作串接-api-index-mdx-fa151f4ab5f4df57d7c2.js.map