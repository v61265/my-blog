"use strict";(self.webpackChunkv61265_blog=self.webpackChunkv61265_blog||[]).push([[691],{1173:function(e,t,n){n.d(t,{p:function(){return i},A:function(){return d}});var l=n(6540),a=n(557),r=n(6835),c=n(3328),m=n(7715),u=n(7169);var o=e=>{let{post:t}=e;return null};const E=["16px","8px","4px"].map((e=>"rgba(0, 0, 0, 0.1) 0px "+e+" "+e+" 0px"));var s=e=>{let{data:{post:t},children:n}=e;return(0,a.Y)(c.A,null,(0,a.Y)(r.DZ,{as:"h1",variant:"styles.h1"},t.title),(0,a.Y)("p",{sx:{color:"secondary",mt:3,a:{color:"secondary"},fontSize:[1,1,2]}},(0,a.Y)("time",null,t.date),t.tags&&(0,a.Y)(l.Fragment,null," — ",(0,a.Y)(m.A,{tags:t.tags})),t.timeToRead&&" — ",t.timeToRead&&(0,a.Y)("span",null,t.timeToRead," min read")),(0,a.Y)("section",{sx:{my:5,".gatsby-resp-image-wrapper":{my:[4,4,5],borderRadius:"4px",boxShadow:E.join(", "),".gatsby-resp-image-image":{borderRadius:"4px"}},variant:"layout.content"}},n),(0,a.Y)(o,{post:t}))};const i=e=>{var t,n,l;let{data:{post:r}}=e;return(0,a.Y)(u.A,{title:r.title,description:r.description?r.description:r.excerpt,image:r.banner?null===(t=r.banner)||void 0===t||null===(n=t.childImageSharp)||void 0===n||null===(l=n.resize)||void 0===l?void 0:l.src:void 0,pathname:r.slug,canonicalUrl:r.canonicalUrl})};function d(e){let{...t}=e;return l.createElement(s,t)}},7715:function(e,t,n){var l=n(557),a=n(6540),r=n(4194),c=n(3601),m=n(2174);t.A=e=>{let{tags:t}=e;const{tagsPath:n,basePath:u}=(0,c.A)();return(0,l.Y)(a.Fragment,null,t.map(((e,t)=>(0,l.Y)(a.Fragment,{key:e.slug},!!t&&", ",(0,l.Y)(r.Link,{sx:e=>{var t;return{...null===(t=e.styles)||void 0===t?void 0:t.a}},to:(0,m.A)("/"+u+"/"+n+"/"+e.slug)},e.name)))))}},7169:function(e,t,n){var l=n(6540),a=n(4194),r=n(7533);t.A=e=>{let{title:t="",description:n="",pathname:c="",image:m="",children:u=null,canonicalUrl:o=""}=e;const E=(0,r.A)(),{siteTitle:s,siteTitleAlt:i,siteUrl:d,siteDescription:p,siteImage:g,author:h,siteLanguage:b}=E,v={title:t?t+" | "+s:i,description:n||p,url:""+d+(c||""),image:""+d+(m||g)};return l.createElement(l.Fragment,null,l.createElement("html",{lang:b}),l.createElement("title",null,v.title),l.createElement("meta",{name:"description",content:v.description}),l.createElement("meta",{name:"image",content:v.image}),l.createElement("meta",{property:"og:title",content:v.title}),l.createElement("meta",{property:"og:url",content:v.url}),l.createElement("meta",{property:"og:description",content:v.description}),l.createElement("meta",{property:"og:image",content:v.image}),l.createElement("meta",{property:"og:type",content:"website"}),l.createElement("meta",{property:"og:image:alt",content:v.description}),l.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),l.createElement("meta",{name:"twitter:title",content:v.title}),l.createElement("meta",{name:"twitter:url",content:v.url}),l.createElement("meta",{name:"twitter:description",content:v.description}),l.createElement("meta",{name:"twitter:image",content:v.image}),l.createElement("meta",{name:"twitter:image:alt",content:v.description}),l.createElement("meta",{name:"twitter:creator",content:h}),l.createElement("meta",{name:"gatsby-theme",content:"@lekoarts/gatsby-theme-minimal-blog"}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"32x32",href:(0,a.withPrefix)("/favicon-32x32.png")}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"16x16",href:(0,a.withPrefix)("/favicon-16x16.png")}),l.createElement("link",{rel:"apple-touch-icon",sizes:"180x180",href:(0,a.withPrefix)("/apple-touch-icon.png")}),o?l.createElement("link",{rel:"canonical",href:o}):null,u)}},200:function(e,t,n){n.r(t),n.d(t,{Head:function(){return m.p},default:function(){return u}});var l=n(6540),a=n(8453);function r(e){const t=Object.assign({p:"p",strong:"strong",h3:"h3",pre:"pre",code:"code",h4:"h4",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h5:"h5",br:"br",a:"a"},(0,a.RP)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.p,null,l.createElement(t.strong,null,"更新紀錄："),"\n2020/07/01 一小時挑戰\n2020/07/02 一小時挑戰之延長賽"),"\n",l.createElement(t.h3,null,"迴圈"),"\n",l.createElement(t.p,null,"迴圈可用於處理重複進行的事情，最常見的形式為："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"while (條件) {\n  // 指令\n}\n")),"\n",l.createElement(t.p,null,"因此順序為先檢查條件是否為 true ，若為 true 則進入迴圈執行指令，結束後再回到第一行檢查條件，如此往復。\n另一種經典的寫法如下："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"for (初始值; 條件; 每圈結束後的指令) {\n  // 指令\n}\n")),"\n",l.createElement(t.p,null,"例如我想要印出一到十，就可以寫："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"for (let i = 1; i <= 10; i++) {\n  console.log(i);\n}\n")),"\n",l.createElement(t.h3,null,"函式"),"\n",l.createElement(t.p,null,"數學上的函式為 ",l.createElement(t.code,null,"f(x) = y")," ，將 x 輸入進去就可以得到 y 。 JavaScript 中的函式寫法如下："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"function 名稱(參數) {\n  // 指令\n  return 回傳值; //若沒設定則自動回傳 undefined\n}\n")),"\n",l.createElement(t.p,null,"其中可以放其他的 function。若要查看函式的特性可以這樣："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"function hi() {\n  return 'hello';\n}\nconsole.log(hi); // [function: hi]\nconsole.log(hi()); // 'hello'\n")),"\n",l.createElement(t.p,null,"函式也不一定要取名字，例如："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"function transform(arr, func) {\n  var result = [];\n  for (let i = 0; i < arr.length; i++) {\n    result = func(arr[i]);\n  }\n  return result;\n}\n\nconsole.log(\n  transform([1, 3, 5], function (x) {\n    return x * 2;\n  })\n); //[2, 6, 10]\n")),"\n",l.createElement(t.h4,null,"參數和引數"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"function add(a, b) {\n  return a + b;\n}\nconsole.log(add(2, 3)); // 5\n")),"\n",l.createElement(t.p,null,"上面例子中， a 和 b 就是函式的 ",l.createElement(t.code,null,"參數")," ，而 2 和 3 則是 ",l.createElement(t.code,null,"引數"),"。可以在函式中使用 ",l.createElement(t.code,null,"console.log(arguments)")," 查看引數。引數會以物件形式出現，例如 ",l.createElement(t.code,null,'{"0": 2, "1": 3}'),"。"),"\n",l.createElement(t.h4,null,"函式的特性"),"\n",l.createElement(t.p,null,"函式再讀取引數時，對電腦來說是先複製一份才執行，因此所有變動都不會影響到外面。例如："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var n = 10;\nfunction double(x) {\n  return x * 2;\n}\ndouble(n); // 20\nconsole.log(n); // 10\n")),"\n",l.createElement(t.p,null,"不過物件和陣列可能會改變，和記憶體位置有關，可看本篇文章最後的「其他觀念」。"),"\n",l.createElement(t.h4,null,"return"),"\n",l.createElement(t.p,null,"如果不需要知道結果（比如說只是要 console.log 某個東西）可以不用 return，此時會預設 return undefine 。\n另外， return 後的東西都不會執行。"),"\n",l.createElement(t.h3,null,"內建函式"),"\n",l.createElement(t.h4,null,"數字相關"),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,null,"寫法"),l.createElement(t.th,null,"用途"),l.createElement(t.th,null,"範例"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,null,"Number(str)"),l.createElement(t.td,null,"字串轉數字"),l.createElement(t.td,null,l.createElement(t.code,null,"var num = Number('11')")," //11")),l.createElement(t.tr,null,l.createElement(t.td,null,"parseInt(str, 進位制)"),l.createElement(t.td,null,"字串轉整數，通常使用十進位"),l.createElement(t.td,null,l.createElement(t.code,null,"var num = parseInt(2, 10)")," //10")),l.createElement(t.tr,null,l.createElement(t.td,null,"parseFloat(str)"),l.createElement(t.td,null,"字串轉小數"),l.createElement(t.td,null,l.createElement(t.code,null,"var num = parseFloat('3.2')")," //3.2")),l.createElement(t.tr,null,l.createElement(t.td,null,"num.toFixed(幾位)"),l.createElement(t.td,null,"取到小數點後幾位四捨五入"),l.createElement(t.td,null,l.createElement(t.code,null,"var num = 2.78.toFixed(1)")," //2.8")),l.createElement(t.tr,null,l.createElement(t.td,null,"Number.MAX_VALUE"),l.createElement(t.td,null,"顯示 JavaScript 能記憶最大的數，再大會不精準"),l.createElement(t.td,null,l.createElement(t.code,null,"var max = Number.MAX_VALUE")," //1.7976931348623157e+308")),l.createElement(t.tr,null,l.createElement(t.td,null,"Number.MIN_VALUE"),l.createElement(t.td,null,"顯示 JavaScript 能記憶最小的數，再小會不精準"),l.createElement(t.td,null,l.createElement(t.code,null,"var min = Number.MIN_VALUE")," //5e-324")),l.createElement(t.tr,null,l.createElement(t.td,null,"Math.PI"),l.createElement(t.td,null,"圓周率"),l.createElement(t.td,null,l.createElement(t.code,null,"var pi = Math.PI")," //3.141592653589793")),l.createElement(t.tr,null,l.createElement(t.td,null,"Math.ceil(num)"),l.createElement(t.td,null,"無條件進位"),l.createElement(t.td,null,l.createElement(t.code,null,"var ceil = Math.ceil(10.1)")," //11")),l.createElement(t.tr,null,l.createElement(t.td,null,"Math.floor(num)"),l.createElement(t.td,null,"無條件捨去"),l.createElement(t.td,null,l.createElement(t.code,null,"var floor = Math.floor(10.1)")," //10")),l.createElement(t.tr,null,l.createElement(t.td,null,"Math.round(num)"),l.createElement(t.td,null,"四捨五入法"),l.createElement(t.td,null,l.createElement(t.code,null,"var round = Math.round(10.1)")," //10")),l.createElement(t.tr,null,l.createElement(t.td,null,"Math.sqrt(num)"),l.createElement(t.td,null,"開根號"),l.createElement(t.td,null,l.createElement(t.code,null,"var sqrt = Math.sqrt(144)")," //12")),l.createElement(t.tr,null,l.createElement(t.td,null,"Math.pow(num, times)"),l.createElement(t.td,null,"num 的 times 次方"),l.createElement(t.td,null,l.createElement(t.code,null,"var pow = Math.pow(3, 3)")," //27")),l.createElement(t.tr,null,l.createElement(t.td,null,"Math.random()"),l.createElement(t.td,null,"隨機生產從 0 到 1 的數字（包含 0 但不含 1）"),l.createElement(t.td,null,l.createElement(t.code,null,"var pow = Math.random()")," //0.84")))),"\n",l.createElement(t.p,null,"以上常數皆用大寫表示。\n數字轉字串有兩種做法："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = 12;\na = a.toString(); //'12'\nvar b = 43;\nb = b + ''; //'43'，因為字串加數字等於字串\n")),"\n",l.createElement(t.h4,null,"字串相關"),"\n",l.createElement(t.h5,null,"大小寫"),"\n",l.createElement(t.p,null,"概念：以下所有的位置都是由 0 開始計算，而非 1 。",l.createElement(t.br),"\n",l.createElement(t.code,null,"str.toUpperCase(a)"),"：將 str 的第 a 個字（從零開始）轉為大寫。",l.createElement(t.br),"\n",l.createElement(t.code,null,"str.toLowerCase(a)"),"：將 str 的第 a 個字（從零開始）轉為小寫。"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = 'hello'.toUpperCase(2); //'heLlo'\nvar b = 'HELLO'.toUpperCase(0); //'hELLO'\n")),"\n",l.createElement(t.h5,null,"ASCII"),"\n",l.createElement(t.p,null,"ASCII 是將字串用數字存起來的形式，每個字母都可以對應到一個數字，且大小寫不同，例如 A 對應到 65 、 B 對應到 66 、 a 對應到 97 。",l.createElement(t.br),"\n",l.createElement(t.code,null,"str.charCodeAt(a)"),"：得到字串第 a 位置的 ASCII。",l.createElement(t.br),"\n",l.createElement(t.code,null,"String.fromCharCode(num)"),"：得到數字 num 在 ASCII 上對應到的字母。",l.createElement(t.br),"\n","運用 ASCII 可將數字轉大小寫，例如："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var str = 'a';\nvar temp = str.charCodeAt(a); //97\ntemp -= 32; //65\nstr = String.fromCharCode(temp); //'A'\n")),"\n",l.createElement(t.p,null,"若將數字比大小，則是轉換為 ASCII 再比。因為字母的 ASCII 有連貫，因此若要測試字母是否為大寫，可以用 ",l.createElement(t.code,null,"str >= 'A' && str <= 'Z'"),"。"),"\n",l.createElement(t.h5,null,"搜尋和取代"),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"str.indexOf('key') "),"： key 第一個字在 str 的位置。若有兩個以上，則回傳最前面的。若找不到 key，會回傳負數。",l.createElement(t.br),"\n",l.createElement(t.code,null,"str.replace('key', new)"),"：將 str 中的 key 換成 new。一樣只會換第一個，若想要全部替換可使用正規表達式。詳細可參考 ",l.createElement(t.a,{href:"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/String/replace"},"MDN")," 。"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = 'hello'.indexOf('el'); // 1\nvar b = 'hello'.replace('l', 'i'); // 'hello'\n")),"\n",l.createElement(t.h5,null,"其他"),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"str.spilt(a)"),"：以 a 為標準將字串拆開，並變成陣列。",l.createElement(t.br),"\n",l.createElement(t.code,null,"str.trim()"),"：去掉字串前後的空格。",l.createElement(t.br),"\n",l.createElement(t.code,null,"str[i]"),"：叫出字串位置 i 的字。"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = 'hello world';\nvar spilt = a.spilt(' '); // ['hello', 'world']\nvar b = a[4]; //'o'\n")),"\n",l.createElement(t.h4,null,"陣列相關"),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"arr.join(a)"),"：用 a 將陣列接起來，回傳字串。"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = ['hello', 'i', 'am'];\na = a.join('!'); // 'hello!i!am'\n")),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"arr.map(function)"),"：讓串列中每個元素都跑過函式。"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = [1, 3, 5, 7, 9];\na = a.map(function (i) {\n  return i + 1;\n});\nconsole.log(a); // [2, 4, 6, 8, 10]\n")),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"arr.filter(function)"),"：串列通過函式回傳 true 的會留下。"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = [1, 2, 3, 4, 5];\na = a.filter(function (i) {\n  return i % 2 === 0;\n});\nconsole.log(a); // [2, 4]\n")),"\n",l.createElement(t.p,null,"只要還是陣列， .map 和 .filter 可以一起使用，也可以無限往後加。\n",l.createElement(t.code,null,"arr.slice(a, b)"),"： 回傳陣列的第 a 個元素到第 b-1 個數。"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = [1, 2, 3, 4, 5];\na = a.slice(2, 4); //[3, 4]\n")),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"arr.splice(start, remove, new)"),"：在第 start 的位置，刪除 remove 個元素，並插入 new 為新的元素。（會改變陣列本身）"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = [1, 2, 3, 4, 5];\na.splice(1, 0, 9); //[1, 9, 2, 3, 4, 5]\na.splice(3, 1, 'hi'); //[1, 9, 2, 'hi', 4, 5]\n")),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"arr.sort(function)"),"：將陣列的元素由小排到大。"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = ['apple', 'zipper', 'cute'];\na.sort(); //['apple', 'cute', 'zipper']\nvar b = [22, 18, 9];\nb.sort(); //[18, 22, 9]\n")),"\n",l.createElement(t.p,null,"上面數字的排序只是看最前面的數字，要真正幫數字排序可使用函數。概念為若回傳值小於等於 0 不調換，但若 > 0 則互換。詳細可參考",l.createElement(t.a,{href:"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/sort"},"MDN"),"因此若要由小排到大，可用："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"b.sort(function (a, b) {\n  return a - b;\n});\n")),"\n",l.createElement(t.p,null,"此時若要由小排到大，改成 ",l.createElement(t.code,null,"b - a")," 即可。\n",l.createElement(t.code,null,"arr.reduce(function)"),"：可用於累積加總，例如求陣列總和："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = [22, 18, 9];\nvar sum = a.reduce(function (acc, cur) {\n  return acc + cur;\n}, 0);\n")),"\n",l.createElement(t.p,null,"其實就是將上次執行的成果（如 22 + 18）存到 acc ，再執行下一個（ acc + 9）。這個方法可以避免外面再多存一個初始值。"),"\n",l.createElement(t.h3,null,"其他觀念"),"\n",l.createElement(t.p,null,"詳細觀念可參考：",l.createElement(t.br),"\n",l.createElement(t.a,{href:"https://medium.com/@hulitw/variable-and-frontdesk-a53a0440af3c"},"從博物館寄物櫃理解變數儲存模型"),l.createElement(t.br),"\n",l.createElement(t.a,{href:"https://cythilya.github.io/2017/02/12/immutability-immutablejs-seamless-immutable/"},"Immutability 為何重要？淺談 immutable.js 和 seamless-immutable")),"\n",l.createElement(t.h4,null,"物件在記憶體內儲存的方式"),"\n",l.createElement(t.p,null,"可先看看這幾題："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = [] === [];\nvar b = [1] === [1];\nvar c = {} === {};\nvar d = { a: 1 } === { a: 1 };\n")),"\n",l.createElement(t.p,null,"以上四個全部都是 ",l.createElement(t.strong,null,"false！"),l.createElement(t.br),"\n","因為物件儲存的方式是先將物件放再記憶體位置內，再紀錄記憶體位置。左邊的 ",l.createElement(t.code,null,"[]")," 和右邊的 ",l.createElement(t.code,null,"[]")," 其實是存在不同記憶體位置，等式判斷時是看記憶體位置，因此才會得出 false。",l.createElement(t.br),"\n","另外也有這種狀況："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = [1];\nvar b = a;\nb[1] = 2;\nconsole.log(a, b); // [1,2], [1,2]\n")),"\n",l.createElement(t.p,null,"此時因為 b 的記憶體位置直接對應到 a 的，因此修改到 b 的內容就會修改到 a。但如果："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = [1];\nvar b = a;\nb = [1, 2];\nconsole.log(a, b); // [1], [1,2]\n")),"\n",l.createElement(t.p,null,"上面直接將 b 指定到新的記憶體位置，因此 a 不會受到影響。"),"\n",l.createElement(t.h4,null,"Immutable 不可變"),"\n",l.createElement(t.p,null,"不可變是指在創建變數、賦值後便不可改變，若對其有任何變更（例如：新增、修改、刪除），就會回傳一個新值。例如："),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-js"},"var a = 'hello'; //放在記憶體 0x01\na = 'change'; //開新的記憶體 0x02\na.toUpperCase(0); // 只有 return 沒有改變 a\nconsole.log(a); // 'change'\n")),"\n",l.createElement(t.p,null,"所有的字串都是不可變的，有些內建函式可以改變陣列，因此使用前可先看 ",l.createElement(t.a,{href:"https://developer.mozilla.org/zh-TW/"},"說明書")," 才不會產生奇怪的 bug。"),"\n",l.createElement(t.h3,null,"心得"),"\n",l.createElement(t.p,null,"最後花了總共三個小時才完成這篇（躺）果然記筆記吃力不討好，不過相信未來的我會感謝自己的(?)"))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.RP)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)},m=n(1173);function u(e){return l.createElement(m.A,e,l.createElement(c,e))}m.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-給自己看的-java-script-基礎-迴圈、函式與其他觀念-index-mdx-7818858d31ac2fe71f00.js.map